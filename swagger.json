{
  "swagger": "2.0",
  "info": {
    "title": "NetBox API",
    "description": "API to access NetBox",
    "termsOfService": "https://github.com/netbox-community/netbox",
    "license": {
      "name": "Apache v2 License"
    },
    "version": "2.7"
  },
  "host": "localhost:8000",
  "schemes": [
    "http"
  ],
  "basePath": "/api",
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "security": [
    {
      "Bearer": []
    }
  ],
  "paths": {
    "/circuits/_choices/": {
      "get": {
        "operationId": "circuits__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": []
    },
    "/circuits/_choices/{id}/": {
      "get": {
        "operationId": "circuits__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/circuits/circuit-terminations/": {
      "get": {
        "operationId": "circuits_circuit-terminations_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "term_side",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "port_speed",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "upstream_speed",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "xconnect_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "circuit_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CircuitTermination"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "post": {
        "operationId": "circuits_circuit-terminations_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuitTermination"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitTermination"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": []
    },
    "/circuits/circuit-terminations/{id}/": {
      "get": {
        "operationId": "circuits_circuit-terminations_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitTermination"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "put": {
        "operationId": "circuits_circuit-terminations_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuitTermination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitTermination"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "patch": {
        "operationId": "circuits_circuit-terminations_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuitTermination"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitTermination"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "delete": {
        "operationId": "circuits_circuit-terminations_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this circuit termination.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/circuits/circuit-types/": {
      "get": {
        "operationId": "circuits_circuit-types_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/CircuitType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "post": {
        "operationId": "circuits_circuit-types_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": []
    },
    "/circuits/circuit-types/{id}/": {
      "get": {
        "operationId": "circuits_circuit-types_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "put": {
        "operationId": "circuits_circuit-types_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "patch": {
        "operationId": "circuits_circuit-types_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CircuitType"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "delete": {
        "operationId": "circuits_circuit-types_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this circuit type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/circuits/circuits/": {
      "get": {
        "operationId": "circuits_circuits_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "cid",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "install_date",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "commit_rate",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "provider",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Circuit"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "post": {
        "operationId": "circuits_circuits_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuit"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Circuit"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": []
    },
    "/circuits/circuits/{id}/": {
      "get": {
        "operationId": "circuits_circuits_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Circuit"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "put": {
        "operationId": "circuits_circuits_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Circuit"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "patch": {
        "operationId": "circuits_circuits_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCircuit"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Circuit"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "delete": {
        "operationId": "circuits_circuits_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this circuit.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/circuits/providers/": {
      "get": {
        "operationId": "circuits_providers_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "asn",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "account",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Provider"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "post": {
        "operationId": "circuits_providers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": []
    },
    "/circuits/providers/{id}/": {
      "get": {
        "operationId": "circuits_providers_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "put": {
        "operationId": "circuits_providers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "patch": {
        "operationId": "circuits_providers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "delete": {
        "operationId": "circuits_providers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this provider.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/circuits/providers/{id}/graphs/": {
      "get": {
        "operationId": "circuits_providers_graphs",
        "description": "A convenience method for rendering graphs for a particular provider.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Provider"
            }
          }
        },
        "tags": [
          "circuits"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this provider.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/_choices/": {
      "get": {
        "operationId": "dcim__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/_choices/{id}/": {
      "get": {
        "operationId": "dcim__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/dcim/cables/": {
      "get": {
        "operationId": "dcim_cables_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "label",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "length",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "length_unit",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "color",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cable"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_cables_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCable"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cable"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/cables/{id}/": {
      "get": {
        "operationId": "dcim_cables_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cable"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_cables_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cable"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_cables_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCable"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cable"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_cables_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this cable.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/connected-device/": {
      "get": {
        "operationId": "dcim_connected-device_list",
        "description": "This endpoint allows a user to determine what device (if any) is connected to a given peer device and peer\ninterface. This is useful in a situation where a device boots with no configuration, but can detect its neighbors\nvia a protocol such as LLDP. Two query parameters must be included in the request:\n\n* `peer_device`: The name of the peer device\n* `peer_interface`: The name of the peer interface",
        "parameters": [
          {
            "name": "peer_device",
            "in": "query",
            "description": "The name of the peer device",
            "required": true,
            "type": "string"
          },
          {
            "name": "peer_interface",
            "in": "query",
            "description": "The name of the peer interface",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Device"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-connections/": {
      "get": {
        "operationId": "dcim_console-connections_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConsolePort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-port-templates/": {
      "get": {
        "operationId": "dcim_console-port-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConsolePortTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_console-port-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePortTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-port-templates/{id}/": {
      "get": {
        "operationId": "dcim_console-port-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_console-port-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_console-port-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_console-port-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console port template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/console-ports/": {
      "get": {
        "operationId": "dcim_console-ports_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConsolePort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_console-ports_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-ports/{id}/": {
      "get": {
        "operationId": "dcim_console-ports_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_console-ports_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_console-ports_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsolePort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_console-ports_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/console-ports/{id}/trace/": {
      "get": {
        "operationId": "dcim_console-ports_trace",
        "description": "Trace a complete cable path and return each segment as a three-tuple of (termination, cable, termination).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsolePort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/console-server-port-templates/": {
      "get": {
        "operationId": "dcim_console-server-port-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConsoleServerPortTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_console-server-port-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPortTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-server-port-templates/{id}/": {
      "get": {
        "operationId": "dcim_console-server-port-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_console-server-port-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_console-server-port-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_console-server-port-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console server port template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/console-server-ports/": {
      "get": {
        "operationId": "dcim_console-server-ports_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConsoleServerPort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_console-server-ports_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/console-server-ports/{id}/": {
      "get": {
        "operationId": "dcim_console-server-ports_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_console-server-ports_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_console-server-ports_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConsoleServerPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_console-server-ports_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console server port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/console-server-ports/{id}/trace/": {
      "get": {
        "operationId": "dcim_console-server-ports_trace",
        "description": "Trace a complete cable path and return each segment as a three-tuple of (termination, cable, termination).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConsoleServerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this console server port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/device-bay-templates/": {
      "get": {
        "operationId": "dcim_device-bay-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceBayTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_device-bay-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBayTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBayTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/device-bay-templates/{id}/": {
      "get": {
        "operationId": "dcim_device-bay-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBayTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_device-bay-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBayTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBayTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_device-bay-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBayTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBayTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_device-bay-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device bay template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/device-bays/": {
      "get": {
        "operationId": "dcim_device-bays_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceBay"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_device-bays_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBay"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBay"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/device-bays/{id}/": {
      "get": {
        "operationId": "dcim_device-bays_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBay"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_device-bays_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBay"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_device-bays_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceBay"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceBay"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_device-bays_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device bay.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/device-roles/": {
      "get": {
        "operationId": "dcim_device-roles_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "color",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vm_role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceRole"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_device-roles_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/device-roles/{id}/": {
      "get": {
        "operationId": "dcim_device-roles_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_device-roles_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_device-roles_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_device-roles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device role.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/device-types/": {
      "get": {
        "operationId": "dcim_device-types_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "part_number",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "u_height",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_full_depth",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "subdevice_role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "console_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "console_server_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "power_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "power_outlets",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "interfaces",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pass_through_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_bays",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_device-types_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceType"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/device-types/{id}/": {
      "get": {
        "operationId": "dcim_device-types_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceType"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_device-types_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceType"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_device-types_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceType"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_device-types_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/devices/": {
      "get": {
        "operationId": "dcim_devices_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "face",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "position",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vc_position",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vc_priority",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "local_context_data",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "model",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_full_depth",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "has_primary_ip",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_chassis_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_chassis_member",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "console_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "console_server_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "power_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "power_outlets",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "interfaces",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "pass_through_ports",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_bays",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceWithConfigContext"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_devices_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceWithConfigContext"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceWithConfigContext"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/devices/{id}/": {
      "get": {
        "operationId": "dcim_devices_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceWithConfigContext"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_devices_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceWithConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceWithConfigContext"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_devices_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceWithConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceWithConfigContext"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_devices_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/devices/{id}/graphs/": {
      "get": {
        "operationId": "dcim_devices_graphs",
        "description": "A convenience method for rendering graphs for a particular Device.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceWithConfigContext"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/devices/{id}/napalm/": {
      "get": {
        "operationId": "dcim_devices_napalm",
        "description": "Execute a NAPALM method on a Device",
        "parameters": [
          {
            "name": "method",
            "in": "query",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceNAPALM"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this device.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/front-port-templates/": {
      "get": {
        "operationId": "dcim_front-port-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FrontPortTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_front-port-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPortTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/front-port-templates/{id}/": {
      "get": {
        "operationId": "dcim_front-port-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_front-port-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_front-port-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_front-port-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this front port template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/front-ports/": {
      "get": {
        "operationId": "dcim_front-ports_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/FrontPort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_front-ports_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/front-ports/{id}/": {
      "get": {
        "operationId": "dcim_front-ports_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_front-ports_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_front-ports_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableFrontPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/FrontPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_front-ports_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this front port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/interface-connections/": {
      "get": {
        "operationId": "dcim_interface-connections_list",
        "description": "",
        "parameters": [
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InterfaceConnection"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/interface-templates/": {
      "get": {
        "operationId": "dcim_interface-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mgmt_only",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InterfaceTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_interface-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInterfaceTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InterfaceTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/interface-templates/{id}/": {
      "get": {
        "operationId": "dcim_interface-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InterfaceTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_interface-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInterfaceTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InterfaceTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_interface-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInterfaceTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InterfaceTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_interface-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this interface template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/interfaces/": {
      "get": {
        "operationId": "dcim_interfaces_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mtu",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mgmt_only",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mode",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "kind",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "lag_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vlan_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vlan",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/DeviceInterface"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_interfaces_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/interfaces/{id}/": {
      "get": {
        "operationId": "dcim_interfaces_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_interfaces_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_interfaces_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableDeviceInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_interfaces_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this interface.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/interfaces/{id}/graphs/": {
      "get": {
        "operationId": "dcim_interfaces_graphs",
        "description": "A convenience method for rendering graphs for a particular interface.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this interface.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/interfaces/{id}/trace/": {
      "get": {
        "operationId": "dcim_interfaces_trace",
        "description": "Trace a complete cable path and return each segment as a three-tuple of (termination, cable, termination).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeviceInterface"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this interface.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/inventory-items/": {
      "get": {
        "operationId": "dcim_inventory-items_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "part_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "discovered",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/InventoryItem"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_inventory-items_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInventoryItem"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryItem"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/inventory-items/{id}/": {
      "get": {
        "operationId": "dcim_inventory-items_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryItem"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_inventory-items_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInventoryItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryItem"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_inventory-items_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableInventoryItem"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/InventoryItem"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_inventory-items_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this inventory item.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/manufacturers/": {
      "get": {
        "operationId": "dcim_manufacturers_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Manufacturer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_manufacturers_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/manufacturers/{id}/": {
      "get": {
        "operationId": "dcim_manufacturers_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_manufacturers_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_manufacturers_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Manufacturer"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_manufacturers_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this manufacturer.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/platforms/": {
      "get": {
        "operationId": "dcim_platforms_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "napalm_driver",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "manufacturer",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Platform"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_platforms_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePlatform"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Platform"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/platforms/{id}/": {
      "get": {
        "operationId": "dcim_platforms_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Platform"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_platforms_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePlatform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Platform"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_platforms_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePlatform"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Platform"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_platforms_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this platform.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-connections/": {
      "get": {
        "operationId": "dcim_power-connections_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerPort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-feeds/": {
      "get": {
        "operationId": "dcim_power-feeds_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "supply",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "phase",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "voltage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "amperage",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "max_utilization",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "power_panel_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerFeed"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-feeds_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerFeed"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerFeed"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-feeds/{id}/": {
      "get": {
        "operationId": "dcim_power-feeds_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerFeed"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-feeds_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerFeed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerFeed"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-feeds_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerFeed"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerFeed"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-feeds_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power feed.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-outlet-templates/": {
      "get": {
        "operationId": "dcim_power-outlet-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "feed_leg",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerOutletTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-outlet-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutletTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutletTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-outlet-templates/{id}/": {
      "get": {
        "operationId": "dcim_power-outlet-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutletTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-outlet-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutletTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutletTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-outlet-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutletTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutletTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-outlet-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power outlet template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-outlets/": {
      "get": {
        "operationId": "dcim_power-outlets_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "feed_leg",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerOutlet"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-outlets_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutlet"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutlet"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-outlets/{id}/": {
      "get": {
        "operationId": "dcim_power-outlets_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutlet"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-outlets_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutlet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutlet"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-outlets_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerOutlet"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutlet"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-outlets_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power outlet.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-outlets/{id}/trace/": {
      "get": {
        "operationId": "dcim_power-outlets_trace",
        "description": "Trace a complete cable path and return each segment as a three-tuple of (termination, cable, termination).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerOutlet"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power outlet.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-panels/": {
      "get": {
        "operationId": "dcim_power-panels_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerPanel"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-panels_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPanel"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPanel"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-panels/{id}/": {
      "get": {
        "operationId": "dcim_power-panels_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPanel"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-panels_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPanel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPanel"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-panels_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPanel"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPanel"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-panels_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power panel.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-port-templates/": {
      "get": {
        "operationId": "dcim_power-port-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "maximum_draw",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "allocated_draw",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerPortTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-port-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPortTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-port-templates/{id}/": {
      "get": {
        "operationId": "dcim_power-port-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-port-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-port-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-port-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power port template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-ports/": {
      "get": {
        "operationId": "dcim_power-ports_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "maximum_draw",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "allocated_draw",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "connection_status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/PowerPort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_power-ports_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/power-ports/{id}/": {
      "get": {
        "operationId": "dcim_power-ports_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_power-ports_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_power-ports_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePowerPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_power-ports_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/power-ports/{id}/trace/": {
      "get": {
        "operationId": "dcim_power-ports_trace",
        "description": "Trace a complete cable path and return each segment as a three-tuple of (termination, cable, termination).",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PowerPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this power port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/rack-groups/": {
      "get": {
        "operationId": "dcim_rack-groups_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RackGroup"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_rack-groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackGroup"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/rack-groups/{id}/": {
      "get": {
        "operationId": "dcim_rack-groups_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackGroup"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_rack-groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackGroup"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_rack-groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackGroup"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_rack-groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack group.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/rack-reservations/": {
      "get": {
        "operationId": "dcim_rack-reservations_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rack_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RackReservation"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_rack-reservations_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackReservation"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackReservation"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/rack-reservations/{id}/": {
      "get": {
        "operationId": "dcim_rack-reservations_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackReservation"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_rack-reservations_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackReservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackReservation"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_rack-reservations_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRackReservation"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackReservation"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_rack-reservations_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack reservation.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/rack-roles/": {
      "get": {
        "operationId": "dcim_rack-roles_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "color",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RackRole"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_rack-roles_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/rack-roles/{id}/": {
      "get": {
        "operationId": "dcim_rack-roles_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_rack-roles_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_rack-roles_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RackRole"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_rack-roles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack role.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/racks/": {
      "get": {
        "operationId": "dcim_racks_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "facility_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "asset_tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "width",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "u_height",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "desc_units",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "outer_width",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "outer_depth",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "outer_unit",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "serial",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Rack"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_racks_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRack"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/racks/{id}/": {
      "get": {
        "operationId": "dcim_racks_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_racks_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_racks_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRack"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_racks_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/racks/{id}/elevation/": {
      "get": {
        "operationId": "dcim_racks_elevation",
        "description": "Rack elevation representing the list of rack units. Also supports rendering the elevation as an SVG.",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "required": false,
            "type": "string",
            "minLength": 1
          },
          {
            "name": "face",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "front",
              "rear"
            ],
            "default": "front"
          },
          {
            "name": "render",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "json",
              "svg"
            ],
            "default": "json"
          },
          {
            "name": "unit_width",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 220
          },
          {
            "name": "unit_height",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 22
          },
          {
            "name": "legend_width",
            "in": "query",
            "required": false,
            "type": "integer",
            "default": 30
          },
          {
            "name": "exclude",
            "in": "query",
            "required": false,
            "type": "integer"
          },
          {
            "name": "expand_devices",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          },
          {
            "name": "include_images",
            "in": "query",
            "required": false,
            "type": "boolean",
            "default": true
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RackUnit"
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/racks/{id}/units/": {
      "get": {
        "operationId": "dcim_racks_units",
        "description": "List rack units (by rack)",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Rack"
            }
          }
        },
        "tags": [
          "dcim"
        ],
        "deprecated": true
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rack.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/rear-port-templates/": {
      "get": {
        "operationId": "dcim_rear-port-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "positions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "devicetype_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RearPortTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_rear-port-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPortTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/rear-port-templates/{id}/": {
      "get": {
        "operationId": "dcim_rear-port-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_rear-port-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_rear-port-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPortTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPortTemplate"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_rear-port-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rear port template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/rear-ports/": {
      "get": {
        "operationId": "dcim_rear-ports_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "positions",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "description",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RearPort"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_rear-ports_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPort"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/rear-ports/{id}/": {
      "get": {
        "operationId": "dcim_rear-ports_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_rear-ports_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_rear-ports_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRearPort"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RearPort"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_rear-ports_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this rear port.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/regions/": {
      "get": {
        "operationId": "dcim_regions_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Region"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_regions_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRegion"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/regions/{id}/": {
      "get": {
        "operationId": "dcim_regions_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_regions_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRegion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_regions_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableRegion"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Region"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_regions_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this region.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/sites/": {
      "get": {
        "operationId": "dcim_sites_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "facility",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "asn",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "latitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "longitude",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_phone",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "contact_email",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Site"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_sites_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSite"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/sites/{id}/": {
      "get": {
        "operationId": "dcim_sites_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_sites_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_sites_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSite"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_sites_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this site.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/sites/{id}/graphs/": {
      "get": {
        "operationId": "dcim_sites_graphs",
        "description": "A convenience method for rendering graphs for a particular site.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Site"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this site.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/dcim/virtual-chassis/": {
      "get": {
        "operationId": "dcim_virtual-chassis_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "domain",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualChassis"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "post": {
        "operationId": "dcim_virtual-chassis_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualChassis"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualChassis"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": []
    },
    "/dcim/virtual-chassis/{id}/": {
      "get": {
        "operationId": "dcim_virtual-chassis_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualChassis"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "put": {
        "operationId": "dcim_virtual-chassis_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualChassis"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualChassis"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "patch": {
        "operationId": "dcim_virtual-chassis_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualChassis"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualChassis"
            }
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "delete": {
        "operationId": "dcim_virtual-chassis_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "dcim"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this virtual chassis.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/_choices/": {
      "get": {
        "operationId": "extras__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/_choices/{id}/": {
      "get": {
        "operationId": "extras__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/extras/_custom_field_choices/": {
      "get": {
        "operationId": "extras__custom_field_choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/_custom_field_choices/{id}/": {
      "get": {
        "operationId": "extras__custom_field_choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/extras/config-contexts/": {
      "get": {
        "operationId": "extras_config-contexts_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_active",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ConfigContext"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "post": {
        "operationId": "extras_config-contexts_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConfigContext"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfigContext"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/config-contexts/{id}/": {
      "get": {
        "operationId": "extras_config-contexts_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfigContext"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "put": {
        "operationId": "extras_config-contexts_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfigContext"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "patch": {
        "operationId": "extras_config-contexts_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ConfigContext"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "delete": {
        "operationId": "extras_config-contexts_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this config context.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/export-templates/": {
      "get": {
        "operationId": "extras_export-templates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "content_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_language",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ExportTemplate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "post": {
        "operationId": "extras_export-templates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableExportTemplate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExportTemplate"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/export-templates/{id}/": {
      "get": {
        "operationId": "extras_export-templates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExportTemplate"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "put": {
        "operationId": "extras_export-templates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableExportTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExportTemplate"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "patch": {
        "operationId": "extras_export-templates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableExportTemplate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ExportTemplate"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "delete": {
        "operationId": "extras_export-templates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this export template.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/graphs/": {
      "get": {
        "operationId": "extras_graphs_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "template_language",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Graph"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "post": {
        "operationId": "extras_graphs_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/graphs/{id}/": {
      "get": {
        "operationId": "extras_graphs_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "put": {
        "operationId": "extras_graphs_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "patch": {
        "operationId": "extras_graphs_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Graph"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "delete": {
        "operationId": "extras_graphs_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this graph.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/image-attachments/": {
      "get": {
        "operationId": "extras_image-attachments_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ImageAttachment"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "post": {
        "operationId": "extras_image-attachments_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/image-attachments/{id}/": {
      "get": {
        "operationId": "extras_image-attachments_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "put": {
        "operationId": "extras_image-attachments_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "patch": {
        "operationId": "extras_image-attachments_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ImageAttachment"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "delete": {
        "operationId": "extras_image-attachments_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this image attachment.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/object-changes/": {
      "get": {
        "operationId": "extras_object-changes_list",
        "description": "Retrieve a list of recent changes.",
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "user_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "request_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "action",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "changed_object_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "changed_object_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "object_repr",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "time",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ObjectChange"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/object-changes/{id}/": {
      "get": {
        "operationId": "extras_object-changes_read",
        "description": "Retrieve a list of recent changes.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ObjectChange"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this object change.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/extras/reports/": {
      "get": {
        "operationId": "extras_reports_list",
        "description": "Compile all reports and their related results (if any). Result data is deferred in the list view.",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/reports/{id}/": {
      "get": {
        "operationId": "extras_reports_read",
        "description": "Retrieve a single Report identified as \"<module>.<report>\".",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/extras/reports/{id}/run/": {
      "post": {
        "operationId": "extras_reports_run",
        "description": "Run a Report and create a new ReportResult, overwriting any previous result for the Report.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/extras/scripts/": {
      "get": {
        "operationId": "extras_scripts_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/scripts/{id}/": {
      "get": {
        "operationId": "extras_scripts_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/extras/tags/": {
      "get": {
        "operationId": "extras_tags_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tag"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "post": {
        "operationId": "extras_tags_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": []
    },
    "/extras/tags/{id}/": {
      "get": {
        "operationId": "extras_tags_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "put": {
        "operationId": "extras_tags_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "patch": {
        "operationId": "extras_tags_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tag"
            }
          }
        },
        "tags": [
          "extras"
        ]
      },
      "delete": {
        "operationId": "extras_tags_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "extras"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tag.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/_choices/": {
      "get": {
        "operationId": "ipam__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/_choices/{id}/": {
      "get": {
        "operationId": "ipam__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/ipam/aggregates/": {
      "get": {
        "operationId": "ipam_aggregates_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "family",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "date_added",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rir_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rir",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Aggregate"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_aggregates_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableAggregate"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/aggregates/{id}/": {
      "get": {
        "operationId": "ipam_aggregates_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_aggregates_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableAggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_aggregates_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableAggregate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Aggregate"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_aggregates_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this aggregate.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/ip-addresses/": {
      "get": {
        "operationId": "ipam_ip-addresses_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "family",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "dns_name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "parent",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mask_length",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "vrf_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vrf",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "interface",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "interface_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "assigned_to_interface",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/IPAddress"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_ip-addresses_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableIPAddress"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/ip-addresses/{id}/": {
      "get": {
        "operationId": "ipam_ip-addresses_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_ip-addresses_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableIPAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_ip-addresses_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableIPAddress"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/IPAddress"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_ip-addresses_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this IP address.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/prefixes/": {
      "get": {
        "operationId": "ipam_prefixes_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "family",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_pool",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "within",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "within_include",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "contains",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mask_length",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "vrf_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vrf",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vlan_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vlan_vid",
            "in": "query",
            "description": "",
            "required": false,
            "type": "number"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Prefix"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_prefixes_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePrefix"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/prefixes/{id}/": {
      "get": {
        "operationId": "ipam_prefixes_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_prefixes_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePrefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_prefixes_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePrefix"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_prefixes_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this prefix.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/prefixes/{id}/available-ips/": {
      "get": {
        "operationId": "ipam_prefixes_available-ips_read",
        "description": "A convenience method for returning available IP addresses within a prefix. By default, the number of IPs\nreturned will be equivalent to PAGINATE_COUNT. An arbitrary limit (up to MAX_PAGE_SIZE, if set) may be passed,\nhowever results will not be paginated.\n\nThe advisory lock decorator uses a PostgreSQL advisory lock to prevent this API from being\ninvoked in parallel, which results in a race condition where multiple insertions can occur.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_prefixes_available-ips_create",
        "description": "A convenience method for returning available IP addresses within a prefix. By default, the number of IPs\nreturned will be equivalent to PAGINATE_COUNT. An arbitrary limit (up to MAX_PAGE_SIZE, if set) may be passed,\nhowever results will not be paginated.\n\nThe advisory lock decorator uses a PostgreSQL advisory lock to prevent this API from being\ninvoked in parallel, which results in a race condition where multiple insertions can occur.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePrefix"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this prefix.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/prefixes/{id}/available-prefixes/": {
      "get": {
        "operationId": "ipam_prefixes_available-prefixes_read",
        "summary": "A convenience method for returning available child prefixes within a parent.",
        "description": "The advisory lock decorator uses a PostgreSQL advisory lock to prevent this API from being\ninvoked in parallel, which results in a race condition where multiple insertions can occur.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_prefixes_available-prefixes_create",
        "summary": "A convenience method for returning available child prefixes within a parent.",
        "description": "The advisory lock decorator uses a PostgreSQL advisory lock to prevent this API from being\ninvoked in parallel, which results in a race condition where multiple insertions can occur.",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritablePrefix"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Prefix"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this prefix.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/rirs/": {
      "get": {
        "operationId": "ipam_rirs_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "is_private",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/RIR"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_rirs_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/rirs/{id}/": {
      "get": {
        "operationId": "ipam_rirs_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_rirs_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_rirs_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/RIR"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_rirs_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this RIR.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/roles/": {
      "get": {
        "operationId": "ipam_roles_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Role"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_roles_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/roles/{id}/": {
      "get": {
        "operationId": "ipam_roles_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_roles_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_roles_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Role"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_roles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this role.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/services/": {
      "get": {
        "operationId": "ipam_services_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "protocol",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "port",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Service"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_services_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableService"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/services/{id}/": {
      "get": {
        "operationId": "ipam_services_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_services_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_services_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableService"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Service"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_services_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this service.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/vlan-groups/": {
      "get": {
        "operationId": "ipam_vlan-groups_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VLANGroup"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_vlan-groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLANGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLANGroup"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/vlan-groups/{id}/": {
      "get": {
        "operationId": "ipam_vlan-groups_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLANGroup"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_vlan-groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLANGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLANGroup"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_vlan-groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLANGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLANGroup"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_vlan-groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this VLAN group.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/vlans/": {
      "get": {
        "operationId": "ipam_vlans_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "vid",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VLAN"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_vlans_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLAN"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLAN"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/vlans/{id}/": {
      "get": {
        "operationId": "ipam_vlans_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLAN"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_vlans_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLAN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLAN"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_vlans_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVLAN"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VLAN"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_vlans_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this VLAN.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/ipam/vrfs/": {
      "get": {
        "operationId": "ipam_vrfs_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "rd",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enforce_unique",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VRF"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "post": {
        "operationId": "ipam_vrfs_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVRF"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VRF"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": []
    },
    "/ipam/vrfs/{id}/": {
      "get": {
        "operationId": "ipam_vrfs_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VRF"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "put": {
        "operationId": "ipam_vrfs_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VRF"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "patch": {
        "operationId": "ipam_vrfs_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVRF"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VRF"
            }
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "delete": {
        "operationId": "ipam_vrfs_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "ipam"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this VRF.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/secrets/_choices/": {
      "get": {
        "operationId": "secrets__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": []
    },
    "/secrets/_choices/{id}/": {
      "get": {
        "operationId": "secrets__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/secrets/generate-rsa-key-pair/": {
      "get": {
        "operationId": "secrets_generate-rsa-key-pair_list",
        "summary": "This endpoint can be used to generate a new RSA key pair. The keys are returned in PEM format.",
        "description": "{\n        \"public_key\": \"<public key>\",\n        \"private_key\": \"<private key>\"\n    }",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": []
    },
    "/secrets/get-session-key/": {
      "post": {
        "operationId": "secrets_get-session-key_create",
        "description": "Retrieve a temporary session key to use for encrypting and decrypting secrets via the API. The user's private RSA\nkey is POSTed with the name `private_key`. An example:\n\n    curl -v -X POST -H \"Authorization: Token <token>\" -H \"Accept: application/json; indent=4\" \\\n    --data-urlencode \"private_key@<filename>\" https://netbox/api/secrets/get-session-key/\n\nThis request will yield a base64-encoded session key to be included in an `X-Session-Key` header in future requests:\n\n    {\n        \"session_key\": \"+8t4SI6XikgVmB5+/urhozx9O5qCQANyOk1MNe6taRf=\"\n    }\n\nThis endpoint accepts one optional parameter: `preserve_key`. If True and a session key exists, the existing session\nkey will be returned instead of a new one.",
        "parameters": [],
        "responses": {
          "201": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": []
    },
    "/secrets/secret-roles/": {
      "get": {
        "operationId": "secrets_secret-roles_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/SecretRole"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "post": {
        "operationId": "secrets_secret-roles_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": []
    },
    "/secrets/secret-roles/{id}/": {
      "get": {
        "operationId": "secrets_secret-roles_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "put": {
        "operationId": "secrets_secret-roles_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "patch": {
        "operationId": "secrets_secret-roles_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SecretRole"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "delete": {
        "operationId": "secrets_secret-roles_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this secret role.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/secrets/secrets/": {
      "get": {
        "operationId": "secrets_secrets_list",
        "description": "",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "device",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Secret"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "post": {
        "operationId": "secrets_secrets_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSecret"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": []
    },
    "/secrets/secrets/{id}/": {
      "get": {
        "operationId": "secrets_secrets_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "put": {
        "operationId": "secrets_secrets_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSecret"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "patch": {
        "operationId": "secrets_secrets_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableSecret"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Secret"
            }
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "delete": {
        "operationId": "secrets_secrets_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "secrets"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this secret.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/tenancy/_choices/": {
      "get": {
        "operationId": "tenancy__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": []
    },
    "/tenancy/_choices/{id}/": {
      "get": {
        "operationId": "tenancy__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/tenancy/tenant-groups/": {
      "get": {
        "operationId": "tenancy_tenant-groups_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/TenantGroup"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "post": {
        "operationId": "tenancy_tenant-groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": []
    },
    "/tenancy/tenant-groups/{id}/": {
      "get": {
        "operationId": "tenancy_tenant-groups_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "put": {
        "operationId": "tenancy_tenant-groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "patch": {
        "operationId": "tenancy_tenant-groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TenantGroup"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "delete": {
        "operationId": "tenancy_tenant-groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tenant group.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/tenancy/tenants/": {
      "get": {
        "operationId": "tenancy_tenants_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Tenant"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "post": {
        "operationId": "tenancy_tenants_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableTenant"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": []
    },
    "/tenancy/tenants/{id}/": {
      "get": {
        "operationId": "tenancy_tenants_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "put": {
        "operationId": "tenancy_tenants_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableTenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "patch": {
        "operationId": "tenancy_tenants_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableTenant"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Tenant"
            }
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "delete": {
        "operationId": "tenancy_tenants_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "tenancy"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this tenant.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/virtualization/_choices/": {
      "get": {
        "operationId": "virtualization__choices_list",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/_choices/{id}/": {
      "get": {
        "operationId": "virtualization__choices_read",
        "description": "",
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ]
    },
    "/virtualization/cluster-groups/": {
      "get": {
        "operationId": "virtualization_cluster-groups_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClusterGroup"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "post": {
        "operationId": "virtualization_cluster-groups_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/cluster-groups/{id}/": {
      "get": {
        "operationId": "virtualization_cluster-groups_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "put": {
        "operationId": "virtualization_cluster-groups_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "patch": {
        "operationId": "virtualization_cluster-groups_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterGroup"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "delete": {
        "operationId": "virtualization_cluster-groups_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this cluster group.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/virtualization/cluster-types/": {
      "get": {
        "operationId": "virtualization_cluster-types_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "slug",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/ClusterType"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "post": {
        "operationId": "virtualization_cluster-types_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/cluster-types/{id}/": {
      "get": {
        "operationId": "virtualization_cluster-types_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "put": {
        "operationId": "virtualization_cluster-types_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "patch": {
        "operationId": "virtualization_cluster-types_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ClusterType"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "delete": {
        "operationId": "virtualization_cluster-types_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this cluster type.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/virtualization/clusters/": {
      "get": {
        "operationId": "virtualization_clusters_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/Cluster"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "post": {
        "operationId": "virtualization_clusters_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCluster"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/clusters/{id}/": {
      "get": {
        "operationId": "virtualization_clusters_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "put": {
        "operationId": "virtualization_clusters_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "patch": {
        "operationId": "virtualization_clusters_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableCluster"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/Cluster"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "delete": {
        "operationId": "virtualization_clusters_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this cluster.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/virtualization/interfaces/": {
      "get": {
        "operationId": "virtualization_interfaces_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "enabled",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mtu",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "virtual_machine",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachineInterface"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "post": {
        "operationId": "virtualization_interfaces_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineInterface"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInterface"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/interfaces/{id}/": {
      "get": {
        "operationId": "virtualization_interfaces_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInterface"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "put": {
        "operationId": "virtualization_interfaces_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInterface"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "patch": {
        "operationId": "virtualization_interfaces_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineInterface"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineInterface"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "delete": {
        "operationId": "virtualization_interfaces_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this interface.",
          "required": true,
          "type": "integer"
        }
      ]
    },
    "/virtualization/virtual-machines/": {
      "get": {
        "operationId": "virtualization_virtual-machines_list",
        "description": "Call to super to allow for caching",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "vcpus",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "memory",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "disk",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "local_context_data",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tenant",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "created__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__gte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "last_updated__lte",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "id__in",
            "in": "query",
            "description": "Multiple values may be separated by commas.",
            "required": false,
            "type": "string"
          },
          {
            "name": "q",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_group_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_group",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_type_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_type",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "cluster_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "region",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "site",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "role",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform_id",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "platform",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "mac_address",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "tag",
            "in": "query",
            "description": "",
            "required": false,
            "type": "string"
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return per page.",
            "required": false,
            "type": "integer"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The initial index from which to return the results.",
            "required": false,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "required": [
                "count",
                "results"
              ],
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer"
                },
                "next": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "previous": {
                  "type": "string",
                  "format": "uri",
                  "x-nullable": true
                },
                "results": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/VirtualMachineWithConfigContext"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "post": {
        "operationId": "virtualization_virtual-machines_create",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineWithConfigContext"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineWithConfigContext"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": []
    },
    "/virtualization/virtual-machines/{id}/": {
      "get": {
        "operationId": "virtualization_virtual-machines_read",
        "description": "Call to super to allow for caching",
        "parameters": [],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineWithConfigContext"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "put": {
        "operationId": "virtualization_virtual-machines_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineWithConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineWithConfigContext"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "patch": {
        "operationId": "virtualization_virtual-machines_partial_update",
        "description": "",
        "parameters": [
          {
            "name": "data",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/WritableVirtualMachineWithConfigContext"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VirtualMachineWithConfigContext"
            }
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "delete": {
        "operationId": "virtualization_virtual-machines_delete",
        "description": "",
        "parameters": [],
        "responses": {
          "204": {
            "description": ""
          }
        },
        "tags": [
          "virtualization"
        ]
      },
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "description": "A unique integer value identifying this virtual machine.",
          "required": true,
          "type": "integer"
        }
      ]
    }
  },
  "definitions": {
    "NestedCircuit": {
      "title": "Circuit",
      "required": [
        "cid"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "cid": {
          "title": "Circuit ID",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "NestedSite": {
      "title": "Site",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "NestedCable": {
      "title": "Cable",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "label": {
          "title": "Label",
          "type": "string",
          "maxLength": 100
        }
      }
    },
    "CircuitTermination": {
      "required": [
        "circuit",
        "term_side",
        "site",
        "port_speed"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "circuit": {
          "$ref": "#/definitions/NestedCircuit"
        },
        "term_side": {
          "title": "Termination",
          "type": "string",
          "enum": [
            "A",
            "Z"
          ]
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "port_speed": {
          "title": "Port speed (Kbps)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "upstream_speed": {
          "title": "Upstream speed (Kbps)",
          "description": "Upstream speed, if different from port speed",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "xconnect_id": {
          "title": "Cross-connect ID",
          "type": "string",
          "maxLength": 50
        },
        "pp_info": {
          "title": "Patch panel/port(s)",
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        }
      }
    },
    "WritableCircuitTermination": {
      "required": [
        "circuit",
        "term_side",
        "site",
        "port_speed"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "circuit": {
          "title": "Circuit",
          "type": "integer"
        },
        "term_side": {
          "title": "Termination",
          "type": "string",
          "enum": [
            "A",
            "Z"
          ]
        },
        "site": {
          "title": "Site",
          "type": "integer"
        },
        "port_speed": {
          "title": "Port speed (Kbps)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "upstream_speed": {
          "title": "Upstream speed (Kbps)",
          "description": "Upstream speed, if different from port speed",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "xconnect_id": {
          "title": "Cross-connect ID",
          "type": "string",
          "maxLength": 50
        },
        "pp_info": {
          "title": "Patch panel/port(s)",
          "type": "string",
          "maxLength": 100
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        }
      }
    },
    "CircuitType": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedProvider": {
      "title": "Provider",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedCircuitType": {
      "title": "Type",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedTenant": {
      "title": "Tenant",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "NestedDevice": {
      "title": "Device",
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "NestedInterface": {
      "title": "Connected endpoint",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "cable": {
          "title": "Cable",
          "type": "integer",
          "x-nullable": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        }
      }
    },
    "CircuitCircuitTermination": {
      "title": "Termination a",
      "required": [
        "site",
        "connected_endpoint",
        "port_speed"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "connected_endpoint": {
          "$ref": "#/definitions/NestedInterface"
        },
        "port_speed": {
          "title": "Port speed (Kbps)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "upstream_speed": {
          "title": "Upstream speed (Kbps)",
          "description": "Upstream speed, if different from port speed",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "xconnect_id": {
          "title": "Cross-connect ID",
          "type": "string",
          "maxLength": 50
        }
      }
    },
    "Circuit": {
      "required": [
        "cid",
        "provider",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "cid": {
          "title": "Circuit ID",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "provider": {
          "$ref": "#/definitions/NestedProvider"
        },
        "type": {
          "$ref": "#/definitions/NestedCircuitType"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "install_date": {
          "title": "Date installed",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "commit_rate": {
          "title": "Commit rate (Kbps)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "termination_a": {
          "$ref": "#/definitions/CircuitCircuitTermination"
        },
        "termination_z": {
          "$ref": "#/definitions/CircuitCircuitTermination"
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableCircuit": {
      "required": [
        "cid",
        "provider",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "cid": {
          "title": "Circuit ID",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "provider": {
          "title": "Provider",
          "type": "integer"
        },
        "type": {
          "title": "Type",
          "type": "integer"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "planned",
            "provisioning",
            "active",
            "offline",
            "deprovisioning",
            "decommissioned"
          ]
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "install_date": {
          "title": "Date installed",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "commit_rate": {
          "title": "Commit rate (Kbps)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "termination_a": {
          "title": "Termination a",
          "type": "string",
          "readOnly": true
        },
        "termination_z": {
          "title": "Termination z",
          "type": "string",
          "readOnly": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "Provider": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "asn": {
          "title": "ASN",
          "type": "integer",
          "maximum": 4294967295,
          "minimum": 1,
          "x-nullable": true
        },
        "account": {
          "title": "Account number",
          "type": "string",
          "maxLength": 30
        },
        "portal_url": {
          "title": "Portal",
          "type": "string",
          "format": "uri",
          "maxLength": 200
        },
        "noc_contact": {
          "title": "NOC contact",
          "type": "string"
        },
        "admin_contact": {
          "title": "Admin contact",
          "type": "string"
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Cable": {
      "required": [
        "termination_a_type",
        "termination_a_id",
        "termination_b_type",
        "termination_b_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "termination_a_type": {
          "title": "Termination a type",
          "type": "string"
        },
        "termination_a_id": {
          "title": "Termination a id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "termination_a": {
          "title": "Termination a",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "termination_b_type": {
          "title": "Termination b type",
          "type": "string"
        },
        "termination_b_id": {
          "title": "Termination b id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "termination_b": {
          "title": "Termination b",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "cat3",
            "cat5",
            "cat5e",
            "cat6",
            "cat6a",
            "cat7",
            "dac-active",
            "dac-passive",
            "coaxial",
            "mmf",
            "mmf-om1",
            "mmf-om2",
            "mmf-om3",
            "mmf-om4",
            "smf",
            "smf-os1",
            "smf-os2",
            "aoc",
            "power"
          ]
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "label": {
          "title": "Label",
          "type": "string",
          "maxLength": 100
        },
        "color": {
          "title": "Color",
          "type": "string",
          "pattern": "^[0-9a-f]{6}$",
          "maxLength": 6
        },
        "length": {
          "title": "Length",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "length_unit": {
          "title": "Length unit",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "WritableCable": {
      "required": [
        "termination_a_type",
        "termination_a_id",
        "termination_b_type",
        "termination_b_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "termination_a_type": {
          "title": "Termination a type",
          "type": "string"
        },
        "termination_a_id": {
          "title": "Termination a id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "termination_a": {
          "title": "Termination a",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "termination_b_type": {
          "title": "Termination b type",
          "type": "string"
        },
        "termination_b_id": {
          "title": "Termination b id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "termination_b": {
          "title": "Termination b",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "cat3",
            "cat5",
            "cat5e",
            "cat6",
            "cat6a",
            "cat7",
            "dac-active",
            "dac-passive",
            "coaxial",
            "mmf",
            "mmf-om1",
            "mmf-om2",
            "mmf-om3",
            "mmf-om4",
            "smf",
            "smf-os1",
            "smf-os2",
            "aoc",
            "power"
          ]
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "connected",
            "planned",
            "decommissioning"
          ]
        },
        "label": {
          "title": "Label",
          "type": "string",
          "maxLength": 100
        },
        "color": {
          "title": "Color",
          "type": "string",
          "pattern": "^[0-9a-f]{6}$",
          "maxLength": 6
        },
        "length": {
          "title": "Length",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "length_unit": {
          "title": "Length unit",
          "type": "string",
          "enum": [
            "m",
            "cm",
            "ft",
            "in"
          ]
        }
      }
    },
    "NestedManufacturer": {
      "title": "Manufacturer",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "devicetype_count": {
          "title": "Devicetype count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedDeviceType": {
      "title": "Device type",
      "required": [
        "model",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "manufacturer": {
          "$ref": "#/definitions/NestedManufacturer"
        },
        "model": {
          "title": "Model",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedDeviceRole": {
      "title": "Device role",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedPlatform": {
      "title": "Platform",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 100,
          "minLength": 1
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedRack": {
      "title": "Rack",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedIPAddress": {
      "title": "Primary ip",
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "type": "integer",
          "readOnly": true
        },
        "address": {
          "title": "Address",
          "description": "IPv4 or IPv6 address (with mask)",
          "type": "string"
        }
      }
    },
    "NestedCluster": {
      "title": "Cluster",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedVirtualChassis": {
      "title": "Virtual chassis",
      "required": [
        "master"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "master": {
          "$ref": "#/definitions/NestedDevice"
        },
        "member_count": {
          "title": "Member count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Device": {
      "required": [
        "device_type",
        "device_role",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "device_role": {
          "$ref": "#/definitions/NestedDeviceRole"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "platform": {
          "$ref": "#/definitions/NestedPlatform"
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this device",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "rack": {
          "$ref": "#/definitions/NestedRack"
        },
        "position": {
          "title": "Position (U)",
          "description": "The lowest-numbered unit occupied by the device",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "face": {
          "title": "Face",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "parent_device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "primary_ip": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip4": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip6": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "cluster": {
          "$ref": "#/definitions/NestedCluster"
        },
        "virtual_chassis": {
          "$ref": "#/definitions/NestedVirtualChassis"
        },
        "vc_position": {
          "title": "Vc position",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "vc_priority": {
          "title": "Vc priority",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "local_context_data": {
          "title": "Local context data",
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ConsolePort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "ConsolePortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "WritableConsolePortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "de-9",
            "db-25",
            "rj-11",
            "rj-12",
            "rj-45",
            "usb-a",
            "usb-b",
            "usb-c",
            "usb-mini-a",
            "usb-mini-b",
            "usb-micro-a",
            "usb-micro-b",
            "other"
          ]
        }
      }
    },
    "WritableConsolePort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "de-9",
            "db-25",
            "rj-11",
            "rj-12",
            "rj-45",
            "usb-a",
            "usb-b",
            "usb-c",
            "usb-mini-a",
            "usb-mini-b",
            "usb-micro-a",
            "usb-micro-b",
            "other"
          ]
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "ConsoleServerPortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "WritableConsoleServerPortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "de-9",
            "db-25",
            "rj-11",
            "rj-12",
            "rj-45",
            "usb-a",
            "usb-b",
            "usb-c",
            "usb-mini-a",
            "usb-mini-b",
            "usb-micro-a",
            "usb-micro-b",
            "other"
          ]
        }
      }
    },
    "ConsoleServerPort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableConsoleServerPort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "de-9",
            "db-25",
            "rj-11",
            "rj-12",
            "rj-45",
            "usb-a",
            "usb-b",
            "usb-c",
            "usb-mini-a",
            "usb-mini-b",
            "usb-micro-a",
            "usb-micro-b",
            "other"
          ]
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "DeviceBayTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "WritableDeviceBayTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "DeviceBay": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "installed_device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableDeviceBay": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "installed_device": {
          "title": "Installed device",
          "type": "integer",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "DeviceRole": {
      "required": [
        "name",
        "slug",
        "color"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "color": {
          "title": "Color",
          "type": "string",
          "pattern": "^[0-9a-f]{6}$",
          "maxLength": 6,
          "minLength": 1
        },
        "vm_role": {
          "title": "VM Role",
          "description": "Virtual machines may be assigned to this role",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DeviceType": {
      "required": [
        "manufacturer",
        "model",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "manufacturer": {
          "$ref": "#/definitions/NestedManufacturer"
        },
        "model": {
          "title": "Model",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "part_number": {
          "title": "Part number",
          "description": "Discrete part number (optional)",
          "type": "string",
          "maxLength": 50
        },
        "u_height": {
          "title": "Height (U)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "is_full_depth": {
          "title": "Is full depth",
          "description": "Device consumes both front and rear rack faces",
          "type": "boolean"
        },
        "subdevice_role": {
          "title": "Subdevice role",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "front_image": {
          "title": "Front image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "rear_image": {
          "title": "Rear image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableDeviceType": {
      "required": [
        "manufacturer",
        "model",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "manufacturer": {
          "title": "Manufacturer",
          "type": "integer"
        },
        "model": {
          "title": "Model",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "part_number": {
          "title": "Part number",
          "description": "Discrete part number (optional)",
          "type": "string",
          "maxLength": 50
        },
        "u_height": {
          "title": "Height (U)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "is_full_depth": {
          "title": "Is full depth",
          "description": "Device consumes both front and rear rack faces",
          "type": "boolean"
        },
        "subdevice_role": {
          "title": "Parent/child status",
          "description": "Parent devices house child devices in device bays. Leave blank if this device type is neither a parent nor a child.",
          "type": "string",
          "enum": [
            "parent",
            "child"
          ]
        },
        "front_image": {
          "title": "Front image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "rear_image": {
          "title": "Rear image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "DeviceWithConfigContext": {
      "required": [
        "device_type",
        "device_role",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "device_role": {
          "$ref": "#/definitions/NestedDeviceRole"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "platform": {
          "$ref": "#/definitions/NestedPlatform"
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this device",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "rack": {
          "$ref": "#/definitions/NestedRack"
        },
        "position": {
          "title": "Position (U)",
          "description": "The lowest-numbered unit occupied by the device",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "face": {
          "title": "Face",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "parent_device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "primary_ip": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip4": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip6": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "cluster": {
          "$ref": "#/definitions/NestedCluster"
        },
        "virtual_chassis": {
          "$ref": "#/definitions/NestedVirtualChassis"
        },
        "vc_position": {
          "title": "Vc position",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "vc_priority": {
          "title": "Vc priority",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "local_context_data": {
          "title": "Local context data",
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "config_context": {
          "title": "Config context",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableDeviceWithConfigContext": {
      "required": [
        "device_type",
        "device_role",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "device_role": {
          "title": "Device role",
          "type": "integer"
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "platform": {
          "title": "Platform",
          "type": "integer",
          "x-nullable": true
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this device",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "site": {
          "title": "Site",
          "type": "integer"
        },
        "rack": {
          "title": "Rack",
          "type": "integer",
          "x-nullable": true
        },
        "position": {
          "title": "Position (U)",
          "description": "The lowest-numbered unit occupied by the device",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "face": {
          "title": "Rack face",
          "type": "string",
          "enum": [
            "front",
            "rear"
          ]
        },
        "parent_device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "offline",
            "active",
            "planned",
            "staged",
            "failed",
            "inventory",
            "decommissioning"
          ]
        },
        "primary_ip": {
          "title": "Primary ip",
          "type": "string",
          "readOnly": true
        },
        "primary_ip4": {
          "title": "Primary IPv4",
          "type": "integer",
          "x-nullable": true
        },
        "primary_ip6": {
          "title": "Primary IPv6",
          "type": "integer",
          "x-nullable": true
        },
        "cluster": {
          "title": "Cluster",
          "type": "integer",
          "x-nullable": true
        },
        "virtual_chassis": {
          "title": "Virtual chassis",
          "type": "integer",
          "x-nullable": true
        },
        "vc_position": {
          "title": "Vc position",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "vc_priority": {
          "title": "Vc priority",
          "type": "integer",
          "maximum": 255,
          "minimum": 0,
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "local_context_data": {
          "title": "Local context data",
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "config_context": {
          "title": "Config context",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "DeviceNAPALM": {
      "required": [
        "method"
      ],
      "type": "object",
      "properties": {
        "method": {
          "title": "Method",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "NestedRearPortTemplate": {
      "title": "Rear port",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "FrontPortTemplate": {
      "required": [
        "device_type",
        "name",
        "type",
        "rear_port"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "rear_port": {
          "$ref": "#/definitions/NestedRearPortTemplate"
        },
        "rear_port_position": {
          "title": "Rear port position",
          "type": "integer",
          "default": 1,
          "maximum": 64,
          "minimum": 1
        }
      }
    },
    "WritableFrontPortTemplate": {
      "required": [
        "device_type",
        "name",
        "type",
        "rear_port"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "8p8c",
            "110-punch",
            "bnc",
            "fc",
            "lc",
            "lc-apc",
            "lsh",
            "lsh-apc",
            "mpo",
            "mtrj",
            "sc",
            "sc-apc",
            "st"
          ]
        },
        "rear_port": {
          "title": "Rear port",
          "type": "integer"
        },
        "rear_port_position": {
          "title": "Rear port position",
          "type": "integer",
          "default": 1,
          "maximum": 64,
          "minimum": 1
        }
      }
    },
    "FrontPortRearPort": {
      "title": "Rear port",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "FrontPort": {
      "required": [
        "device",
        "name",
        "type",
        "rear_port"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "rear_port": {
          "$ref": "#/definitions/FrontPortRearPort"
        },
        "rear_port_position": {
          "title": "Rear port position",
          "type": "integer",
          "default": 1,
          "maximum": 64,
          "minimum": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableFrontPort": {
      "required": [
        "device",
        "name",
        "type",
        "rear_port"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "8p8c",
            "110-punch",
            "bnc",
            "fc",
            "lc",
            "lc-apc",
            "lsh",
            "lsh-apc",
            "mpo",
            "mtrj",
            "sc",
            "sc-apc",
            "st"
          ]
        },
        "rear_port": {
          "title": "Rear port",
          "type": "integer"
        },
        "rear_port_position": {
          "title": "Rear port position",
          "type": "integer",
          "default": 1,
          "maximum": 64,
          "minimum": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "InterfaceConnection": {
      "required": [
        "interface_b"
      ],
      "type": "object",
      "properties": {
        "interface_a": {
          "$ref": "#/definitions/NestedInterface"
        },
        "interface_b": {
          "$ref": "#/definitions/NestedInterface"
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          }
        }
      }
    },
    "InterfaceTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "mgmt_only": {
          "title": "Management only",
          "type": "boolean"
        }
      }
    },
    "WritableInterfaceTemplate": {
      "required": [
        "device_type",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "virtual",
            "lag",
            "100base-tx",
            "1000base-t",
            "2.5gbase-t",
            "5gbase-t",
            "10gbase-t",
            "10gbase-cx4",
            "1000base-x-gbic",
            "1000base-x-sfp",
            "10gbase-x-sfpp",
            "10gbase-x-xfp",
            "10gbase-x-xenpak",
            "10gbase-x-x2",
            "25gbase-x-sfp28",
            "40gbase-x-qsfpp",
            "50gbase-x-sfp28",
            "100gbase-x-cfp",
            "100gbase-x-cfp2",
            "200gbase-x-cfp2",
            "100gbase-x-cfp4",
            "100gbase-x-cpak",
            "100gbase-x-qsfp28",
            "200gbase-x-qsfp56",
            "400gbase-x-qsfpdd",
            "400gbase-x-osfp",
            "ieee802.11a",
            "ieee802.11g",
            "ieee802.11n",
            "ieee802.11ac",
            "ieee802.11ad",
            "ieee802.11ax",
            "gsm",
            "cdma",
            "lte",
            "sonet-oc3",
            "sonet-oc12",
            "sonet-oc48",
            "sonet-oc192",
            "sonet-oc768",
            "sonet-oc1920",
            "sonet-oc3840",
            "1gfc-sfp",
            "2gfc-sfp",
            "4gfc-sfp",
            "8gfc-sfpp",
            "16gfc-sfpp",
            "32gfc-sfp28",
            "128gfc-sfp28",
            "inifiband-sdr",
            "inifiband-ddr",
            "inifiband-qdr",
            "inifiband-fdr10",
            "inifiband-fdr",
            "inifiband-edr",
            "inifiband-hdr",
            "inifiband-ndr",
            "inifiband-xdr",
            "t1",
            "e1",
            "t3",
            "e3",
            "cisco-stackwise",
            "cisco-stackwise-plus",
            "cisco-flexstack",
            "cisco-flexstack-plus",
            "juniper-vcp",
            "extreme-summitstack",
            "extreme-summitstack-128",
            "extreme-summitstack-256",
            "extreme-summitstack-512",
            "other"
          ]
        },
        "mgmt_only": {
          "title": "Management only",
          "type": "boolean"
        }
      }
    },
    "NestedVLAN": {
      "title": "Untagged vlan",
      "required": [
        "vid",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "vid": {
          "title": "ID",
          "type": "integer",
          "maximum": 4094,
          "minimum": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "DeviceInterface": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "lag": {
          "$ref": "#/definitions/NestedInterface"
        },
        "mtu": {
          "title": "MTU",
          "type": "integer",
          "maximum": 65536,
          "minimum": 1,
          "x-nullable": true
        },
        "mac_address": {
          "title": "MAC Address",
          "type": "string",
          "x-nullable": true
        },
        "mgmt_only": {
          "title": "OOB Management",
          "description": "This interface is used only for out-of-band management",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "mode": {
          "title": "Mode",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "untagged_vlan": {
          "$ref": "#/definitions/NestedVLAN"
        },
        "tagged_vlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedVLAN"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "count_ipaddresses": {
          "title": "Count ipaddresses",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "WritableDeviceInterface": {
      "required": [
        "device",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "virtual",
            "lag",
            "100base-tx",
            "1000base-t",
            "2.5gbase-t",
            "5gbase-t",
            "10gbase-t",
            "10gbase-cx4",
            "1000base-x-gbic",
            "1000base-x-sfp",
            "10gbase-x-sfpp",
            "10gbase-x-xfp",
            "10gbase-x-xenpak",
            "10gbase-x-x2",
            "25gbase-x-sfp28",
            "40gbase-x-qsfpp",
            "50gbase-x-sfp28",
            "100gbase-x-cfp",
            "100gbase-x-cfp2",
            "200gbase-x-cfp2",
            "100gbase-x-cfp4",
            "100gbase-x-cpak",
            "100gbase-x-qsfp28",
            "200gbase-x-qsfp56",
            "400gbase-x-qsfpdd",
            "400gbase-x-osfp",
            "ieee802.11a",
            "ieee802.11g",
            "ieee802.11n",
            "ieee802.11ac",
            "ieee802.11ad",
            "ieee802.11ax",
            "gsm",
            "cdma",
            "lte",
            "sonet-oc3",
            "sonet-oc12",
            "sonet-oc48",
            "sonet-oc192",
            "sonet-oc768",
            "sonet-oc1920",
            "sonet-oc3840",
            "1gfc-sfp",
            "2gfc-sfp",
            "4gfc-sfp",
            "8gfc-sfpp",
            "16gfc-sfpp",
            "32gfc-sfp28",
            "128gfc-sfp28",
            "inifiband-sdr",
            "inifiband-ddr",
            "inifiband-qdr",
            "inifiband-fdr10",
            "inifiband-fdr",
            "inifiband-edr",
            "inifiband-hdr",
            "inifiband-ndr",
            "inifiband-xdr",
            "t1",
            "e1",
            "t3",
            "e3",
            "cisco-stackwise",
            "cisco-stackwise-plus",
            "cisco-flexstack",
            "cisco-flexstack-plus",
            "juniper-vcp",
            "extreme-summitstack",
            "extreme-summitstack-128",
            "extreme-summitstack-256",
            "extreme-summitstack-512",
            "other"
          ]
        },
        "enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "lag": {
          "title": "Parent LAG",
          "type": "integer",
          "x-nullable": true
        },
        "mtu": {
          "title": "MTU",
          "type": "integer",
          "maximum": 65536,
          "minimum": 1,
          "x-nullable": true
        },
        "mac_address": {
          "title": "MAC Address",
          "type": "string",
          "x-nullable": true
        },
        "mgmt_only": {
          "title": "OOB Management",
          "description": "This interface is used only for out-of-band management",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "enum": [
            "access",
            "tagged",
            "tagged-all"
          ]
        },
        "untagged_vlan": {
          "title": "Untagged VLAN",
          "type": "integer",
          "x-nullable": true
        },
        "tagged_vlans": {
          "type": "array",
          "items": {
            "title": "Tagged VLANs",
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "count_ipaddresses": {
          "title": "Count ipaddresses",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "InventoryItem": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "parent": {
          "title": "Parent",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "manufacturer": {
          "$ref": "#/definitions/NestedManufacturer"
        },
        "part_id": {
          "title": "Part ID",
          "type": "string",
          "maxLength": 50
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this item",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "discovered": {
          "title": "Discovered",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableInventoryItem": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "parent": {
          "title": "Parent",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "manufacturer": {
          "title": "Manufacturer",
          "type": "integer",
          "x-nullable": true
        },
        "part_id": {
          "title": "Part ID",
          "type": "string",
          "maxLength": 50
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this item",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "discovered": {
          "title": "Discovered",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "Manufacturer": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "devicetype_count": {
          "title": "Devicetype count",
          "type": "integer",
          "readOnly": true
        },
        "inventoryitem_count": {
          "title": "Inventoryitem count",
          "type": "integer",
          "readOnly": true
        },
        "platform_count": {
          "title": "Platform count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Platform": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 100,
          "minLength": 1
        },
        "manufacturer": {
          "$ref": "#/definitions/NestedManufacturer"
        },
        "napalm_driver": {
          "title": "NAPALM driver",
          "description": "The name of the NAPALM driver to use when interacting with devices",
          "type": "string",
          "maxLength": 50
        },
        "napalm_args": {
          "title": "NAPALM arguments",
          "description": "Additional arguments to pass when initiating the NAPALM driver (JSON format)",
          "type": "string",
          "x-nullable": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritablePlatform": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 100,
          "minLength": 1
        },
        "manufacturer": {
          "title": "Manufacturer",
          "description": "Optionally limit this platform to devices of a certain manufacturer",
          "type": "integer",
          "x-nullable": true
        },
        "napalm_driver": {
          "title": "NAPALM driver",
          "description": "The name of the NAPALM driver to use when interacting with devices",
          "type": "string",
          "maxLength": 50
        },
        "napalm_args": {
          "title": "NAPALM arguments",
          "description": "Additional arguments to pass when initiating the NAPALM driver (JSON format)",
          "type": "string",
          "x-nullable": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PowerPort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "maximum_draw": {
          "title": "Maximum draw",
          "description": "Maximum power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "allocated_draw": {
          "title": "Allocated draw",
          "description": "Allocated power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "NestedPowerPanel": {
      "title": "Power panel",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "powerfeed_count": {
          "title": "Powerfeed count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PowerFeed": {
      "required": [
        "power_panel",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "power_panel": {
          "$ref": "#/definitions/NestedPowerPanel"
        },
        "rack": {
          "$ref": "#/definitions/NestedRack"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "active",
            "label": "Active",
            "id": 1
          }
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "primary",
            "label": "Primary",
            "id": 1
          }
        },
        "supply": {
          "title": "Supply",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "ac",
            "label": "AC",
            "id": 1
          }
        },
        "phase": {
          "title": "Phase",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "single-phase",
            "label": "Single phase",
            "id": 1
          }
        },
        "voltage": {
          "title": "Voltage",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1
        },
        "amperage": {
          "title": "Amperage",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1
        },
        "max_utilization": {
          "title": "Max utilization",
          "description": "Maximum permissible draw (percentage)",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritablePowerFeed": {
      "required": [
        "power_panel",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "power_panel": {
          "title": "Power panel",
          "type": "integer"
        },
        "rack": {
          "title": "Rack",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "offline",
            "active",
            "planned",
            "failed"
          ]
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "primary",
            "redundant"
          ]
        },
        "supply": {
          "title": "Supply",
          "type": "string",
          "enum": [
            "ac",
            "dc"
          ]
        },
        "phase": {
          "title": "Phase",
          "type": "string",
          "enum": [
            "single-phase",
            "three-phase"
          ]
        },
        "voltage": {
          "title": "Voltage",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1
        },
        "amperage": {
          "title": "Amperage",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1
        },
        "max_utilization": {
          "title": "Max utilization",
          "description": "Maximum permissible draw (percentage)",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "NestedPowerPortTemplate": {
      "title": "Power port",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        }
      }
    },
    "PowerOutletTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "power_port": {
          "$ref": "#/definitions/NestedPowerPortTemplate"
        },
        "feed_leg": {
          "title": "Feed leg",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        }
      }
    },
    "WritablePowerOutletTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "iec-60320-c5",
            "iec-60320-c7",
            "iec-60320-c13",
            "iec-60320-c15",
            "iec-60320-c19",
            "iec-60309-p-n-e-4h",
            "iec-60309-p-n-e-6h",
            "iec-60309-p-n-e-9h",
            "iec-60309-2p-e-4h",
            "iec-60309-2p-e-6h",
            "iec-60309-2p-e-9h",
            "iec-60309-3p-e-4h",
            "iec-60309-3p-e-6h",
            "iec-60309-3p-e-9h",
            "iec-60309-3p-n-e-4h",
            "iec-60309-3p-n-e-6h",
            "iec-60309-3p-n-e-9h",
            "nema-5-15r",
            "nema-5-20r",
            "nema-5-30r",
            "nema-5-50r",
            "nema-6-15r",
            "nema-6-20r",
            "nema-6-30r",
            "nema-6-50r",
            "nema-l5-15r",
            "nema-l5-20r",
            "nema-l5-30r",
            "nema-l5-50r",
            "nema-l6-20r",
            "nema-l6-30r",
            "nema-l6-50r",
            "CS6360C",
            "CS6364C",
            "CS8164C",
            "CS8264C",
            "CS8364C",
            "CS8464C",
            "ita-e",
            "ita-f",
            "ita-g",
            "ita-h",
            "ita-i",
            "ita-j",
            "ita-k",
            "ita-l",
            "ita-m",
            "ita-n",
            "ita-o"
          ]
        },
        "power_port": {
          "title": "Power port",
          "type": "integer",
          "x-nullable": true
        },
        "feed_leg": {
          "title": "Feed leg",
          "description": "Phase (for three-phase feeds)",
          "type": "string",
          "enum": [
            "A",
            "B",
            "C"
          ]
        }
      }
    },
    "NestedPowerPort": {
      "title": "Power port",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "cable": {
          "title": "Cable",
          "type": "integer",
          "x-nullable": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        }
      }
    },
    "PowerOutlet": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "power_port": {
          "$ref": "#/definitions/NestedPowerPort"
        },
        "feed_leg": {
          "title": "Feed leg",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "boolean",
              "x-nullable": true
            }
          },
          "readOnly": true
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritablePowerOutlet": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "iec-60320-c5",
            "iec-60320-c7",
            "iec-60320-c13",
            "iec-60320-c15",
            "iec-60320-c19",
            "iec-60309-p-n-e-4h",
            "iec-60309-p-n-e-6h",
            "iec-60309-p-n-e-9h",
            "iec-60309-2p-e-4h",
            "iec-60309-2p-e-6h",
            "iec-60309-2p-e-9h",
            "iec-60309-3p-e-4h",
            "iec-60309-3p-e-6h",
            "iec-60309-3p-e-9h",
            "iec-60309-3p-n-e-4h",
            "iec-60309-3p-n-e-6h",
            "iec-60309-3p-n-e-9h",
            "nema-5-15r",
            "nema-5-20r",
            "nema-5-30r",
            "nema-5-50r",
            "nema-6-15r",
            "nema-6-20r",
            "nema-6-30r",
            "nema-6-50r",
            "nema-l5-15r",
            "nema-l5-20r",
            "nema-l5-30r",
            "nema-l5-50r",
            "nema-l6-20r",
            "nema-l6-30r",
            "nema-l6-50r",
            "CS6360C",
            "CS6364C",
            "CS8164C",
            "CS8264C",
            "CS8364C",
            "CS8464C",
            "ita-e",
            "ita-f",
            "ita-g",
            "ita-h",
            "ita-i",
            "ita-j",
            "ita-k",
            "ita-l",
            "ita-m",
            "ita-n",
            "ita-o"
          ]
        },
        "power_port": {
          "title": "Power port",
          "type": "integer",
          "x-nullable": true
        },
        "feed_leg": {
          "title": "Feed leg",
          "description": "Phase (for three-phase feeds)",
          "type": "string",
          "enum": [
            "A",
            "B",
            "C"
          ]
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "NestedRackGroup": {
      "title": "Rack group",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PowerPanel": {
      "required": [
        "site",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "rack_group": {
          "$ref": "#/definitions/NestedRackGroup"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "powerfeed_count": {
          "title": "Powerfeed count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritablePowerPanel": {
      "required": [
        "site",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "site": {
          "title": "Site",
          "type": "integer"
        },
        "rack_group": {
          "title": "Rack group",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "powerfeed_count": {
          "title": "Powerfeed count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "PowerPortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "maximum_draw": {
          "title": "Maximum draw",
          "description": "Maximum power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "allocated_draw": {
          "title": "Allocated draw",
          "description": "Allocated power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        }
      }
    },
    "WritablePowerPortTemplate": {
      "required": [
        "device_type",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "iec-60320-c6",
            "iec-60320-c8",
            "iec-60320-c14",
            "iec-60320-c16",
            "iec-60320-c20",
            "iec-60309-p-n-e-4h",
            "iec-60309-p-n-e-6h",
            "iec-60309-p-n-e-9h",
            "iec-60309-2p-e-4h",
            "iec-60309-2p-e-6h",
            "iec-60309-2p-e-9h",
            "iec-60309-3p-e-4h",
            "iec-60309-3p-e-6h",
            "iec-60309-3p-e-9h",
            "iec-60309-3p-n-e-4h",
            "iec-60309-3p-n-e-6h",
            "iec-60309-3p-n-e-9h",
            "nema-5-15p",
            "nema-5-20p",
            "nema-5-30p",
            "nema-5-50p",
            "nema-6-15p",
            "nema-6-20p",
            "nema-6-30p",
            "nema-6-50p",
            "nema-l5-15p",
            "nema-l5-20p",
            "nema-l5-30p",
            "nema-l5-50p",
            "nema-l6-20p",
            "nema-l6-30p",
            "nema-l6-50p",
            "cs6361c",
            "cs6365c",
            "cs8165c",
            "cs8265c",
            "cs8365c",
            "cs8465c",
            "ita-e",
            "ita-f",
            "ita-ef",
            "ita-g",
            "ita-h",
            "ita-i",
            "ita-j",
            "ita-k",
            "ita-l",
            "ita-m",
            "ita-n",
            "ita-o"
          ]
        },
        "maximum_draw": {
          "title": "Maximum draw",
          "description": "Maximum power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "allocated_draw": {
          "title": "Allocated draw",
          "description": "Allocated power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        }
      }
    },
    "WritablePowerPort": {
      "required": [
        "device",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "iec-60320-c6",
            "iec-60320-c8",
            "iec-60320-c14",
            "iec-60320-c16",
            "iec-60320-c20",
            "iec-60309-p-n-e-4h",
            "iec-60309-p-n-e-6h",
            "iec-60309-p-n-e-9h",
            "iec-60309-2p-e-4h",
            "iec-60309-2p-e-6h",
            "iec-60309-2p-e-9h",
            "iec-60309-3p-e-4h",
            "iec-60309-3p-e-6h",
            "iec-60309-3p-e-9h",
            "iec-60309-3p-n-e-4h",
            "iec-60309-3p-n-e-6h",
            "iec-60309-3p-n-e-9h",
            "nema-5-15p",
            "nema-5-20p",
            "nema-5-30p",
            "nema-5-50p",
            "nema-6-15p",
            "nema-6-20p",
            "nema-6-30p",
            "nema-6-50p",
            "nema-l5-15p",
            "nema-l5-20p",
            "nema-l5-30p",
            "nema-l5-50p",
            "nema-l6-20p",
            "nema-l6-30p",
            "nema-l6-50p",
            "cs6361c",
            "cs6365c",
            "cs8165c",
            "cs8265c",
            "cs8365c",
            "cs8465c",
            "ita-e",
            "ita-f",
            "ita-ef",
            "ita-g",
            "ita-h",
            "ita-i",
            "ita-j",
            "ita-k",
            "ita-l",
            "ita-m",
            "ita-n",
            "ita-o"
          ]
        },
        "maximum_draw": {
          "title": "Maximum draw",
          "description": "Maximum power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "allocated_draw": {
          "title": "Allocated draw",
          "description": "Allocated power draw (watts)",
          "type": "integer",
          "maximum": 32767,
          "minimum": 1,
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "connected_endpoint_type": {
          "title": "Connected endpoint type",
          "type": "string",
          "readOnly": true
        },
        "connected_endpoint": {
          "title": "Connected endpoint",
          "description": "\n        Return the appropriate serializer for the type of connected object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "connection_status": {
          "title": "Connection status",
          "type": "boolean",
          "enum": [
            false,
            true
          ]
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "RackGroup": {
      "required": [
        "name",
        "slug",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableRackGroup": {
      "required": [
        "name",
        "slug",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "site": {
          "title": "Site",
          "type": "integer"
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedUser": {
      "title": "User",
      "required": [
        "username"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "username": {
          "title": "Username",
          "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
          "type": "string",
          "pattern": "^[\\w.@+-]+$",
          "maxLength": 150,
          "minLength": 1
        }
      }
    },
    "RackReservation": {
      "required": [
        "rack",
        "units",
        "user",
        "description"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "rack": {
          "$ref": "#/definitions/NestedRack"
        },
        "units": {
          "type": "array",
          "items": {
            "title": "Units",
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          }
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/NestedUser"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "WritableRackReservation": {
      "required": [
        "rack",
        "units",
        "user",
        "description"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "rack": {
          "title": "Rack",
          "type": "integer"
        },
        "units": {
          "type": "array",
          "items": {
            "title": "Units",
            "type": "integer",
            "maximum": 32767,
            "minimum": 0
          }
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "user": {
          "title": "User",
          "type": "integer"
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        }
      }
    },
    "RackRole": {
      "required": [
        "name",
        "slug",
        "color"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "color": {
          "title": "Color",
          "type": "string",
          "pattern": "^[0-9a-f]{6}$",
          "maxLength": 6,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedRackRole": {
      "title": "Role",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Rack": {
      "required": [
        "name",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "facility_id": {
          "title": "Facility ID",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "group": {
          "$ref": "#/definitions/NestedRackGroup"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "role": {
          "$ref": "#/definitions/NestedRackRole"
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this rack",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "width": {
          "title": "Width",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "u_height": {
          "title": "Height (U)",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "desc_units": {
          "title": "Descending units",
          "description": "Units are numbered top-to-bottom",
          "type": "boolean"
        },
        "outer_width": {
          "title": "Outer width",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "outer_depth": {
          "title": "Outer depth",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "outer_unit": {
          "title": "Outer unit",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "powerfeed_count": {
          "title": "Powerfeed count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableRack": {
      "required": [
        "name",
        "site"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "facility_id": {
          "title": "Facility ID",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "site": {
          "title": "Site",
          "type": "integer"
        },
        "group": {
          "title": "Group",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "reserved",
            "available",
            "planned",
            "active",
            "deprecated"
          ]
        },
        "role": {
          "title": "Role",
          "type": "integer",
          "x-nullable": true
        },
        "serial": {
          "title": "Serial number",
          "type": "string",
          "maxLength": 50
        },
        "asset_tag": {
          "title": "Asset tag",
          "description": "A unique tag used to identify this rack",
          "type": "string",
          "maxLength": 50,
          "x-nullable": true
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "2-post-frame",
            "4-post-frame",
            "4-post-cabinet",
            "wall-frame",
            "wall-cabinet"
          ]
        },
        "width": {
          "title": "Width",
          "description": "Rail-to-rail width",
          "type": "integer",
          "enum": [
            19,
            23
          ]
        },
        "u_height": {
          "title": "Height (U)",
          "type": "integer",
          "maximum": 100,
          "minimum": 1
        },
        "desc_units": {
          "title": "Descending units",
          "description": "Units are numbered top-to-bottom",
          "type": "boolean"
        },
        "outer_width": {
          "title": "Outer width",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "outer_depth": {
          "title": "Outer depth",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "outer_unit": {
          "title": "Outer unit",
          "type": "string",
          "enum": [
            "mm",
            "in"
          ]
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "powerfeed_count": {
          "title": "Powerfeed count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "RackUnit": {
      "type": "object",
      "properties": {
        "id": {
          "title": "Id",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "face": {
          "title": "Face",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        }
      }
    },
    "RearPortTemplate": {
      "required": [
        "device_type",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "$ref": "#/definitions/NestedDeviceType"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "positions": {
          "title": "Positions",
          "type": "integer",
          "maximum": 64,
          "minimum": 1
        }
      }
    },
    "WritableRearPortTemplate": {
      "required": [
        "device_type",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device_type": {
          "title": "Device type",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "8p8c",
            "110-punch",
            "bnc",
            "fc",
            "lc",
            "lc-apc",
            "lsh",
            "lsh-apc",
            "mpo",
            "mtrj",
            "sc",
            "sc-apc",
            "st"
          ]
        },
        "positions": {
          "title": "Positions",
          "type": "integer",
          "maximum": 64,
          "minimum": 1
        }
      }
    },
    "RearPort": {
      "required": [
        "device",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "positions": {
          "title": "Positions",
          "type": "integer",
          "maximum": 64,
          "minimum": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableRearPort": {
      "required": [
        "device",
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "8p8c",
            "110-punch",
            "bnc",
            "fc",
            "lc",
            "lc-apc",
            "lsh",
            "lsh-apc",
            "mpo",
            "mtrj",
            "sc",
            "sc-apc",
            "st"
          ]
        },
        "positions": {
          "title": "Positions",
          "type": "integer",
          "maximum": 64,
          "minimum": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "cable": {
          "$ref": "#/definitions/NestedCable"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "NestedRegion": {
      "title": "Parent",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "site_count": {
          "title": "Site count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Region": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "parent": {
          "$ref": "#/definitions/NestedRegion"
        },
        "site_count": {
          "title": "Site count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableRegion": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "parent": {
          "title": "Parent",
          "type": "integer",
          "x-nullable": true
        },
        "site_count": {
          "title": "Site count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Site": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "region": {
          "$ref": "#/definitions/NestedRegion"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "facility": {
          "title": "Facility",
          "type": "string",
          "maxLength": 50
        },
        "asn": {
          "title": "ASN",
          "type": "integer",
          "maximum": 4294967295,
          "minimum": 1,
          "x-nullable": true
        },
        "time_zone": {
          "title": "Time zone",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "physical_address": {
          "title": "Physical address",
          "type": "string",
          "maxLength": 200
        },
        "shipping_address": {
          "title": "Shipping address",
          "type": "string",
          "maxLength": 200
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "contact_name": {
          "title": "Contact name",
          "type": "string",
          "maxLength": 50
        },
        "contact_phone": {
          "title": "Contact phone",
          "type": "string",
          "maxLength": 20
        },
        "contact_email": {
          "title": "Contact E-mail",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableSite": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "active",
            "planned",
            "retired"
          ]
        },
        "region": {
          "title": "Region",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "facility": {
          "title": "Facility",
          "type": "string",
          "maxLength": 50
        },
        "asn": {
          "title": "ASN",
          "type": "integer",
          "maximum": 4294967295,
          "minimum": 1,
          "x-nullable": true
        },
        "time_zone": {
          "title": "Time zone",
          "type": "string"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "physical_address": {
          "title": "Physical address",
          "type": "string",
          "maxLength": 200
        },
        "shipping_address": {
          "title": "Shipping address",
          "type": "string",
          "maxLength": 200
        },
        "latitude": {
          "title": "Latitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "longitude": {
          "title": "Longitude",
          "type": "string",
          "format": "decimal",
          "x-nullable": true
        },
        "contact_name": {
          "title": "Contact name",
          "type": "string",
          "maxLength": 50
        },
        "contact_phone": {
          "title": "Contact phone",
          "type": "string",
          "maxLength": 20
        },
        "contact_email": {
          "title": "Contact E-mail",
          "type": "string",
          "format": "email",
          "maxLength": 254
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VirtualChassis": {
      "required": [
        "master"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "master": {
          "$ref": "#/definitions/NestedDevice"
        },
        "domain": {
          "title": "Domain",
          "type": "string",
          "maxLength": 30
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "member_count": {
          "title": "Member count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableVirtualChassis": {
      "required": [
        "master"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "master": {
          "title": "Master",
          "type": "integer"
        },
        "domain": {
          "title": "Domain",
          "type": "string",
          "maxLength": 30
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "member_count": {
          "title": "Member count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedClusterGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedTenantGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "tenant_count": {
          "title": "Tenant count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ConfigContext": {
      "required": [
        "name",
        "data"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "weight": {
          "title": "Weight",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedRegion"
          },
          "uniqueItems": true
        },
        "sites": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedSite"
          },
          "uniqueItems": true
        },
        "roles": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedDeviceRole"
          },
          "uniqueItems": true
        },
        "platforms": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedPlatform"
          },
          "uniqueItems": true
        },
        "cluster_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedClusterGroup"
          },
          "uniqueItems": true
        },
        "clusters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedCluster"
          },
          "uniqueItems": true
        },
        "tenant_groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedTenantGroup"
          },
          "uniqueItems": true
        },
        "tenants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedTenant"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "uniqueItems": true
        },
        "data": {
          "title": "Data",
          "type": "string"
        }
      }
    },
    "WritableConfigContext": {
      "required": [
        "name",
        "data"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "weight": {
          "title": "Weight",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "is_active": {
          "title": "Is active",
          "type": "boolean"
        },
        "regions": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "sites": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "roles": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "platforms": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "cluster_groups": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "clusters": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tenant_groups": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tenants": {
          "type": "array",
          "items": {
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "slug",
            "pattern": "^[-a-zA-Z0-9_]+$"
          },
          "uniqueItems": true
        },
        "data": {
          "title": "Data",
          "type": "string"
        }
      }
    },
    "ExportTemplate": {
      "required": [
        "content_type",
        "name",
        "template_code"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "content_type": {
          "title": "Content type",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 200
        },
        "template_language": {
          "title": "Template language",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "jinja2",
            "label": "Jinja2",
            "id": 20
          }
        },
        "template_code": {
          "title": "Template code",
          "description": "The list of objects being exported is passed as a context variable named <code>queryset</code>.",
          "type": "string",
          "minLength": 1
        },
        "mime_type": {
          "title": "MIME type",
          "description": "Defaults to <code>text/plain</code>",
          "type": "string",
          "maxLength": 50
        },
        "file_extension": {
          "title": "File extension",
          "description": "Extension to append to the rendered filename",
          "type": "string",
          "maxLength": 15
        }
      }
    },
    "WritableExportTemplate": {
      "required": [
        "content_type",
        "name",
        "template_code"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "content_type": {
          "title": "Content type",
          "type": "string"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 200
        },
        "template_language": {
          "title": "Template language",
          "type": "string",
          "enum": [
            "django",
            "jinja2"
          ]
        },
        "template_code": {
          "title": "Template code",
          "description": "The list of objects being exported is passed as a context variable named <code>queryset</code>.",
          "type": "string",
          "minLength": 1
        },
        "mime_type": {
          "title": "MIME type",
          "description": "Defaults to <code>text/plain</code>",
          "type": "string",
          "maxLength": 50
        },
        "file_extension": {
          "title": "File extension",
          "description": "Extension to append to the rendered filename",
          "type": "string",
          "maxLength": 15
        }
      }
    },
    "Graph": {
      "required": [
        "type",
        "name",
        "source"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "type": {
          "title": "Type",
          "type": "string"
        },
        "weight": {
          "title": "Weight",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "template_language": {
          "title": "Template language",
          "type": "string",
          "enum": [
            "django",
            "jinja2"
          ]
        },
        "source": {
          "title": "Source URL",
          "type": "string",
          "maxLength": 500,
          "minLength": 1
        },
        "link": {
          "title": "Link URL",
          "type": "string",
          "format": "uri",
          "maxLength": 200
        }
      }
    },
    "ImageAttachment": {
      "required": [
        "content_type",
        "object_id",
        "image_height",
        "image_width"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "content_type": {
          "title": "Content type",
          "type": "string"
        },
        "object_id": {
          "title": "Object id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "parent": {
          "title": "Parent",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50
        },
        "image": {
          "title": "Image",
          "type": "string",
          "readOnly": true,
          "format": "uri"
        },
        "image_height": {
          "title": "Image height",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "image_width": {
          "title": "Image width",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "ObjectChange": {
      "required": [
        "changed_object_id"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "time": {
          "title": "Time",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "user": {
          "$ref": "#/definitions/NestedUser"
        },
        "user_name": {
          "title": "User name",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "request_id": {
          "title": "Request id",
          "type": "string",
          "format": "uuid",
          "readOnly": true
        },
        "action": {
          "title": "Action",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "changed_object_type": {
          "title": "Changed object type",
          "type": "string",
          "readOnly": true
        },
        "changed_object_id": {
          "title": "Changed object id",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0
        },
        "changed_object": {
          "title": "Changed object",
          "description": "\n        Serialize a nested representation of the changed object.\n        ",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "object_data": {
          "title": "Object data",
          "type": "string",
          "readOnly": true
        }
      }
    },
    "Tag": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 100,
          "minLength": 1
        },
        "color": {
          "title": "Color",
          "type": "string",
          "pattern": "^[0-9a-f]{6}$",
          "maxLength": 6,
          "minLength": 1
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tagged_items": {
          "title": "Tagged items",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedRIR": {
      "title": "Rir",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "aggregate_count": {
          "title": "Aggregate count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Aggregate": {
      "required": [
        "prefix",
        "rir"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "prefix": {
          "title": "Prefix",
          "type": "string"
        },
        "rir": {
          "$ref": "#/definitions/NestedRIR"
        },
        "date_added": {
          "title": "Date added",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableAggregate": {
      "required": [
        "prefix",
        "rir"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "type": "integer",
          "enum": [
            4,
            6
          ],
          "readOnly": true
        },
        "prefix": {
          "title": "Prefix",
          "type": "string"
        },
        "rir": {
          "title": "RIR",
          "type": "integer"
        },
        "date_added": {
          "title": "Date added",
          "type": "string",
          "format": "date",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "NestedVRF": {
      "title": "Vrf",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "rd": {
          "title": "Route distinguisher",
          "type": "string",
          "maxLength": 21,
          "x-nullable": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedVirtualMachine": {
      "title": "Virtual machine",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "IPAddressInterface": {
      "title": "Interface",
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "virtual_machine": {
          "$ref": "#/definitions/NestedVirtualMachine"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        }
      }
    },
    "IPAddress": {
      "required": [
        "address"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "integer"
            }
          },
          "readOnly": true
        },
        "address": {
          "title": "Address",
          "description": "IPv4 or IPv6 address (with mask)",
          "type": "string"
        },
        "vrf": {
          "$ref": "#/definitions/NestedVRF"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "role": {
          "title": "Role",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "interface": {
          "$ref": "#/definitions/IPAddressInterface"
        },
        "nat_inside": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "nat_outside": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "dns_name": {
          "title": "DNS Name",
          "description": "Hostname or FQDN (not case-sensitive)",
          "type": "string",
          "pattern": "^[0-9A-Za-z._-]+$",
          "maxLength": 255
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableIPAddress": {
      "required": [
        "address",
        "nat_outside"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "type": "integer",
          "readOnly": true
        },
        "address": {
          "title": "Address",
          "description": "IPv4 or IPv6 address (with mask)",
          "type": "string"
        },
        "vrf": {
          "title": "VRF",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "description": "The operational status of this IP",
          "type": "string",
          "enum": [
            "active",
            "reserved",
            "deprecated",
            "dhcp"
          ]
        },
        "role": {
          "title": "Role",
          "description": "The functional role of this IP",
          "type": "string",
          "enum": [
            "loopback",
            "secondary",
            "anycast",
            "vip",
            "vrrp",
            "hsrp",
            "glbp",
            "carp"
          ]
        },
        "interface": {
          "title": "Interface",
          "type": "integer",
          "x-nullable": true
        },
        "nat_inside": {
          "title": "NAT (Inside)",
          "description": "The IP for which this address is the \"outside\" IP",
          "type": "integer",
          "x-nullable": true
        },
        "nat_outside": {
          "title": "Nat outside",
          "type": "integer"
        },
        "dns_name": {
          "title": "DNS Name",
          "description": "Hostname or FQDN (not case-sensitive)",
          "type": "string",
          "pattern": "^[0-9A-Za-z._-]+$",
          "maxLength": 255
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "NestedRole": {
      "title": "Role",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Prefix": {
      "required": [
        "prefix"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "readOnly": true
        },
        "prefix": {
          "title": "Prefix",
          "description": "IPv4 or IPv6 network with mask",
          "type": "string"
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "vrf": {
          "$ref": "#/definitions/NestedVRF"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "vlan": {
          "$ref": "#/definitions/NestedVLAN"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "role": {
          "$ref": "#/definitions/NestedRole"
        },
        "is_pool": {
          "title": "Is a pool",
          "description": "All IP addresses within this prefix are considered usable",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritablePrefix": {
      "required": [
        "prefix"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "family": {
          "title": "Family",
          "type": "integer",
          "readOnly": true
        },
        "prefix": {
          "title": "Prefix",
          "description": "IPv4 or IPv6 network with mask",
          "type": "string"
        },
        "site": {
          "title": "Site",
          "type": "integer",
          "x-nullable": true
        },
        "vrf": {
          "title": "VRF",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "vlan": {
          "title": "VLAN",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "description": "Operational status of this prefix",
          "type": "string",
          "enum": [
            "container",
            "active",
            "reserved",
            "deprecated"
          ]
        },
        "role": {
          "title": "Role",
          "description": "The primary function of this prefix",
          "type": "integer",
          "x-nullable": true
        },
        "is_pool": {
          "title": "Is a pool",
          "description": "All IP addresses within this prefix are considered usable",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "RIR": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "is_private": {
          "title": "Private",
          "description": "IP space managed by this RIR is considered private",
          "type": "boolean"
        },
        "aggregate_count": {
          "title": "Aggregate count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Role": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "weight": {
          "title": "Weight",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Service": {
      "required": [
        "name",
        "port"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "virtual_machine": {
          "$ref": "#/definitions/NestedVirtualMachine"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "port": {
          "title": "Port number",
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "protocol": {
          "title": "Protocol",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "ipaddresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedIPAddress"
          },
          "uniqueItems": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableService": {
      "required": [
        "name",
        "port",
        "protocol"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer",
          "x-nullable": true
        },
        "virtual_machine": {
          "title": "Virtual machine",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "port": {
          "title": "Port number",
          "type": "integer",
          "maximum": 65535,
          "minimum": 1
        },
        "protocol": {
          "title": "Protocol",
          "type": "string",
          "enum": [
            "tcp",
            "udp"
          ]
        },
        "ipaddresses": {
          "type": "array",
          "items": {
            "title": "IP addresses",
            "type": "integer"
          },
          "uniqueItems": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "VLANGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableVLANGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "site": {
          "title": "Site",
          "type": "integer",
          "x-nullable": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedVLANGroup": {
      "title": "Group",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VLAN": {
      "required": [
        "vid",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "group": {
          "$ref": "#/definitions/NestedVLANGroup"
        },
        "vid": {
          "title": "ID",
          "type": "integer",
          "maximum": 4094,
          "minimum": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "role": {
          "$ref": "#/definitions/NestedRole"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableVLAN": {
      "required": [
        "vid",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "site": {
          "title": "Site",
          "type": "integer",
          "x-nullable": true
        },
        "group": {
          "title": "Group",
          "type": "integer",
          "x-nullable": true
        },
        "vid": {
          "title": "ID",
          "type": "integer",
          "maximum": 4094,
          "minimum": 1
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "active",
            "reserved",
            "deprecated"
          ]
        },
        "role": {
          "title": "Role",
          "type": "integer",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VRF": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "rd": {
          "title": "Route distinguisher",
          "type": "string",
          "maxLength": 21,
          "x-nullable": true
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "enforce_unique": {
          "title": "Enforce unique space",
          "description": "Prevent duplicate prefixes/IP addresses within this VRF",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "ipaddress_count": {
          "title": "Ipaddress count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableVRF": {
      "required": [
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "rd": {
          "title": "Route distinguisher",
          "type": "string",
          "maxLength": 21,
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "enforce_unique": {
          "title": "Enforce unique space",
          "description": "Prevent duplicate prefixes/IP addresses within this VRF",
          "type": "boolean"
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "display_name": {
          "title": "Display name",
          "type": "string",
          "readOnly": true
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "ipaddress_count": {
          "title": "Ipaddress count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "SecretRole": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "secret_count": {
          "title": "Secret count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedSecretRole": {
      "title": "Role",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "secret_count": {
          "title": "Secret count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Secret": {
      "required": [
        "device",
        "role",
        "plaintext"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "$ref": "#/definitions/NestedDevice"
        },
        "role": {
          "$ref": "#/definitions/NestedSecretRole"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100
        },
        "plaintext": {
          "title": "Plaintext",
          "type": "string",
          "minLength": 1
        },
        "hash": {
          "title": "Hash",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableSecret": {
      "required": [
        "device",
        "role",
        "plaintext"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "device": {
          "title": "Device",
          "type": "integer"
        },
        "role": {
          "title": "Role",
          "type": "integer"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100
        },
        "plaintext": {
          "title": "Plaintext",
          "type": "string",
          "minLength": 1
        },
        "hash": {
          "title": "Hash",
          "type": "string",
          "readOnly": true,
          "minLength": 1
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "TenantGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "tenant_count": {
          "title": "Tenant count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Tenant": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "group": {
          "$ref": "#/definitions/NestedTenantGroup"
        },
        "description": {
          "title": "Description",
          "description": "Long-form name (optional)",
          "type": "string",
          "maxLength": 100
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "ipaddress_count": {
          "title": "Ipaddress count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        },
        "site_count": {
          "title": "Site count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        },
        "vrf_count": {
          "title": "Vrf count",
          "type": "integer",
          "readOnly": true
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableTenant": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 30,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "group": {
          "title": "Group",
          "type": "integer",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "description": "Long-form name (optional)",
          "type": "string",
          "maxLength": 100
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "circuit_count": {
          "title": "Circuit count",
          "type": "integer",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "ipaddress_count": {
          "title": "Ipaddress count",
          "type": "integer",
          "readOnly": true
        },
        "prefix_count": {
          "title": "Prefix count",
          "type": "integer",
          "readOnly": true
        },
        "rack_count": {
          "title": "Rack count",
          "type": "integer",
          "readOnly": true
        },
        "site_count": {
          "title": "Site count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        },
        "vlan_count": {
          "title": "Vlan count",
          "type": "integer",
          "readOnly": true
        },
        "vrf_count": {
          "title": "Vrf count",
          "type": "integer",
          "readOnly": true
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ClusterGroup": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "ClusterType": {
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "NestedClusterType": {
      "title": "Type",
      "required": [
        "name",
        "slug"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "url": {
          "title": "Url",
          "type": "string",
          "format": "uri",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 50,
          "minLength": 1
        },
        "slug": {
          "title": "Slug",
          "type": "string",
          "format": "slug",
          "pattern": "^[-a-zA-Z0-9_]+$",
          "maxLength": 50,
          "minLength": 1
        },
        "cluster_count": {
          "title": "Cluster count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "Cluster": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "type": {
          "$ref": "#/definitions/NestedClusterType"
        },
        "group": {
          "$ref": "#/definitions/NestedClusterGroup"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "WritableCluster": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 100,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "integer"
        },
        "group": {
          "title": "Group",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "site": {
          "title": "Site",
          "type": "integer",
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        },
        "device_count": {
          "title": "Device count",
          "type": "integer",
          "readOnly": true
        },
        "virtualmachine_count": {
          "title": "Virtualmachine count",
          "type": "integer",
          "readOnly": true
        }
      }
    },
    "VirtualMachineInterface": {
      "required": [
        "virtual_machine",
        "name"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "virtual_machine": {
          "$ref": "#/definitions/NestedVirtualMachine"
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          },
          "default": {
            "value": "virtual",
            "label": "Virtual"
          }
        },
        "enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "mtu": {
          "title": "MTU",
          "type": "integer",
          "maximum": 65536,
          "minimum": 1,
          "x-nullable": true
        },
        "mac_address": {
          "title": "MAC Address",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "mode": {
          "title": "Mode",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "untagged_vlan": {
          "$ref": "#/definitions/NestedVLAN"
        },
        "tagged_vlans": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NestedVLAN"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "WritableVirtualMachineInterface": {
      "required": [
        "name",
        "type"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "virtual_machine": {
          "title": "Virtual machine",
          "type": "integer",
          "x-nullable": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "type": {
          "title": "Type",
          "type": "string",
          "enum": [
            "virtual",
            "lag",
            "100base-tx",
            "1000base-t",
            "2.5gbase-t",
            "5gbase-t",
            "10gbase-t",
            "10gbase-cx4",
            "1000base-x-gbic",
            "1000base-x-sfp",
            "10gbase-x-sfpp",
            "10gbase-x-xfp",
            "10gbase-x-xenpak",
            "10gbase-x-x2",
            "25gbase-x-sfp28",
            "40gbase-x-qsfpp",
            "50gbase-x-sfp28",
            "100gbase-x-cfp",
            "100gbase-x-cfp2",
            "200gbase-x-cfp2",
            "100gbase-x-cfp4",
            "100gbase-x-cpak",
            "100gbase-x-qsfp28",
            "200gbase-x-qsfp56",
            "400gbase-x-qsfpdd",
            "400gbase-x-osfp",
            "ieee802.11a",
            "ieee802.11g",
            "ieee802.11n",
            "ieee802.11ac",
            "ieee802.11ad",
            "ieee802.11ax",
            "gsm",
            "cdma",
            "lte",
            "sonet-oc3",
            "sonet-oc12",
            "sonet-oc48",
            "sonet-oc192",
            "sonet-oc768",
            "sonet-oc1920",
            "sonet-oc3840",
            "1gfc-sfp",
            "2gfc-sfp",
            "4gfc-sfp",
            "8gfc-sfpp",
            "16gfc-sfpp",
            "32gfc-sfp28",
            "128gfc-sfp28",
            "inifiband-sdr",
            "inifiband-ddr",
            "inifiband-qdr",
            "inifiband-fdr10",
            "inifiband-fdr",
            "inifiband-edr",
            "inifiband-hdr",
            "inifiband-ndr",
            "inifiband-xdr",
            "t1",
            "e1",
            "t3",
            "e3",
            "cisco-stackwise",
            "cisco-stackwise-plus",
            "cisco-flexstack",
            "cisco-flexstack-plus",
            "juniper-vcp",
            "extreme-summitstack",
            "extreme-summitstack-128",
            "extreme-summitstack-256",
            "extreme-summitstack-512",
            "other"
          ]
        },
        "enabled": {
          "title": "Enabled",
          "type": "boolean"
        },
        "mtu": {
          "title": "MTU",
          "type": "integer",
          "maximum": 65536,
          "minimum": 1,
          "x-nullable": true
        },
        "mac_address": {
          "title": "MAC Address",
          "type": "string",
          "x-nullable": true
        },
        "description": {
          "title": "Description",
          "type": "string",
          "maxLength": 100
        },
        "mode": {
          "title": "Mode",
          "type": "string",
          "enum": [
            "access",
            "tagged",
            "tagged-all"
          ]
        },
        "untagged_vlan": {
          "title": "Untagged VLAN",
          "type": "integer",
          "x-nullable": true
        },
        "tagged_vlans": {
          "type": "array",
          "items": {
            "title": "Tagged VLANs",
            "type": "integer"
          },
          "uniqueItems": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        }
      }
    },
    "VirtualMachineWithConfigContext": {
      "required": [
        "name",
        "cluster"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "required": [
            "label",
            "value"
          ],
          "type": "object",
          "properties": {
            "label": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "site": {
          "$ref": "#/definitions/NestedSite"
        },
        "cluster": {
          "$ref": "#/definitions/NestedCluster"
        },
        "role": {
          "$ref": "#/definitions/NestedDeviceRole"
        },
        "tenant": {
          "$ref": "#/definitions/NestedTenant"
        },
        "platform": {
          "$ref": "#/definitions/NestedPlatform"
        },
        "primary_ip": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip4": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "primary_ip6": {
          "$ref": "#/definitions/NestedIPAddress"
        },
        "vcpus": {
          "title": "VCPUs",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "memory": {
          "title": "Memory (MB)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "disk": {
          "title": "Disk (GB)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "local_context_data": {
          "title": "Local context data",
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "config_context": {
          "title": "Config context",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    },
    "WritableVirtualMachineWithConfigContext": {
      "required": [
        "name",
        "cluster"
      ],
      "type": "object",
      "properties": {
        "id": {
          "title": "ID",
          "type": "integer",
          "readOnly": true
        },
        "name": {
          "title": "Name",
          "type": "string",
          "maxLength": 64,
          "minLength": 1
        },
        "status": {
          "title": "Status",
          "type": "string",
          "enum": [
            "offline",
            "active",
            "planned",
            "staged",
            "failed",
            "decommissioning"
          ]
        },
        "site": {
          "title": "Site",
          "type": "string",
          "readOnly": true
        },
        "cluster": {
          "title": "Cluster",
          "type": "integer"
        },
        "role": {
          "title": "Role",
          "type": "integer",
          "x-nullable": true
        },
        "tenant": {
          "title": "Tenant",
          "type": "integer",
          "x-nullable": true
        },
        "platform": {
          "title": "Platform",
          "type": "integer",
          "x-nullable": true
        },
        "primary_ip": {
          "title": "Primary ip",
          "type": "string",
          "readOnly": true
        },
        "primary_ip4": {
          "title": "Primary IPv4",
          "type": "integer",
          "x-nullable": true
        },
        "primary_ip6": {
          "title": "Primary IPv6",
          "type": "integer",
          "x-nullable": true
        },
        "vcpus": {
          "title": "VCPUs",
          "type": "integer",
          "maximum": 32767,
          "minimum": 0,
          "x-nullable": true
        },
        "memory": {
          "title": "Memory (MB)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "disk": {
          "title": "Disk (GB)",
          "type": "integer",
          "maximum": 2147483647,
          "minimum": 0,
          "x-nullable": true
        },
        "comments": {
          "title": "Comments",
          "type": "string"
        },
        "local_context_data": {
          "title": "Local context data",
          "type": "string",
          "x-nullable": true
        },
        "tags": {
          "type": "array",
          "items": {
            "type": "string",
            "minLength": 1
          }
        },
        "custom_fields": {
          "title": "Custom fields",
          "type": "object"
        },
        "config_context": {
          "title": "Config context",
          "type": "object",
          "additionalProperties": {
            "type": "string"
          },
          "readOnly": true
        },
        "created": {
          "title": "Created",
          "type": "string",
          "format": "date",
          "readOnly": true
        },
        "last_updated": {
          "title": "Last updated",
          "type": "string",
          "format": "date-time",
          "readOnly": true
        }
      }
    }
  }
}
