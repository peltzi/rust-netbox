/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Type5 {
    #[serde(rename = "label")]
    pub label: Label,
    #[serde(rename = "value")]
    pub value: Value,
}

impl Type5 {
    pub fn new(label: Label, value: Value) -> Type5 {
        Type5 { label, value }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "C6")]
    C6,
    #[serde(rename = "C8")]
    C8,
    #[serde(rename = "C14")]
    C14,
    #[serde(rename = "C16")]
    C16,
    #[serde(rename = "C20")]
    C20,
    #[serde(rename = "C22")]
    C22,
    #[serde(rename = "P+N+E 4H")]
    PNE4H,
    #[serde(rename = "P+N+E 6H")]
    PNE6H,
    #[serde(rename = "P+N+E 9H")]
    PNE9H,
    #[serde(rename = "2P+E 4H")]
    _2PE4H,
    #[serde(rename = "2P+E 6H")]
    _2PE6H,
    #[serde(rename = "2P+E 9H")]
    _2PE9H,
    #[serde(rename = "3P+E 4H")]
    _3PE4H,
    #[serde(rename = "3P+E 6H")]
    _3PE6H,
    #[serde(rename = "3P+E 9H")]
    _3PE9H,
    #[serde(rename = "3P+N+E 4H")]
    _3PNE4H,
    #[serde(rename = "3P+N+E 6H")]
    _3PNE6H,
    #[serde(rename = "3P+N+E 9H")]
    _3PNE9H,
    #[serde(rename = "NEMA 1-15P")]
    NEMA115P,
    #[serde(rename = "NEMA 5-15P")]
    NEMA515P,
    #[serde(rename = "NEMA 5-20P")]
    NEMA520P,
    #[serde(rename = "NEMA 5-30P")]
    NEMA530P,
    #[serde(rename = "NEMA 5-50P")]
    NEMA550P,
    #[serde(rename = "NEMA 6-15P")]
    NEMA615P,
    #[serde(rename = "NEMA 6-20P")]
    NEMA620P,
    #[serde(rename = "NEMA 6-30P")]
    NEMA630P,
    #[serde(rename = "NEMA 6-50P")]
    NEMA650P,
    #[serde(rename = "NEMA 10-30P")]
    NEMA1030P,
    #[serde(rename = "NEMA 10-50P")]
    NEMA1050P,
    #[serde(rename = "NEMA 14-20P")]
    NEMA1420P,
    #[serde(rename = "NEMA 14-30P")]
    NEMA1430P,
    #[serde(rename = "NEMA 14-50P")]
    NEMA1450P,
    #[serde(rename = "NEMA 14-60P")]
    NEMA1460P,
    #[serde(rename = "NEMA 15-15P")]
    NEMA1515P,
    #[serde(rename = "NEMA 15-20P")]
    NEMA1520P,
    #[serde(rename = "NEMA 15-30P")]
    NEMA1530P,
    #[serde(rename = "NEMA 15-50P")]
    NEMA1550P,
    #[serde(rename = "NEMA 15-60P")]
    NEMA1560P,
    #[serde(rename = "NEMA L1-15P")]
    NEMAL115P,
    #[serde(rename = "NEMA L5-15P")]
    NEMAL515P,
    #[serde(rename = "NEMA L5-20P")]
    NEMAL520P,
    #[serde(rename = "NEMA L5-30P")]
    NEMAL530P,
    #[serde(rename = "NEMA L5-50P")]
    NEMAL550P,
    #[serde(rename = "NEMA L6-15P")]
    NEMAL615P,
    #[serde(rename = "NEMA L6-20P")]
    NEMAL620P,
    #[serde(rename = "NEMA L6-30P")]
    NEMAL630P,
    #[serde(rename = "NEMA L6-50P")]
    NEMAL650P,
    #[serde(rename = "NEMA L10-30P")]
    NEMAL1030P,
    #[serde(rename = "NEMA L14-20P")]
    NEMAL1420P,
    #[serde(rename = "NEMA L14-30P")]
    NEMAL1430P,
    #[serde(rename = "NEMA L14-50P")]
    NEMAL1450P,
    #[serde(rename = "NEMA L14-60P")]
    NEMAL1460P,
    #[serde(rename = "NEMA L15-20P")]
    NEMAL1520P,
    #[serde(rename = "NEMA L15-30P")]
    NEMAL1530P,
    #[serde(rename = "NEMA L15-50P")]
    NEMAL1550P,
    #[serde(rename = "NEMA L15-60P")]
    NEMAL1560P,
    #[serde(rename = "NEMA L21-20P")]
    NEMAL2120P,
    #[serde(rename = "NEMA L21-30P")]
    NEMAL2130P,
    #[serde(rename = "CS6361C")]
    CS6361C,
    #[serde(rename = "CS6365C")]
    CS6365C,
    #[serde(rename = "CS8165C")]
    CS8165C,
    #[serde(rename = "CS8265C")]
    CS8265C,
    #[serde(rename = "CS8365C")]
    CS8365C,
    #[serde(rename = "CS8465C")]
    CS8465C,
    #[serde(rename = "ITA Type C (CEE 7/16)")]
    ITATypeCCEE716,
    #[serde(rename = "ITA Type E (CEE 7/6)")]
    ITATypeECEE76,
    #[serde(rename = "ITA Type F (CEE 7/4)")]
    ITATypeFCEE74,
    #[serde(rename = "ITA Type E/F (CEE 7/7)")]
    ITATypeEFCEE77,
    #[serde(rename = "ITA Type G (BS 1363)")]
    ITATypeGBS1363,
    #[serde(rename = "ITA Type H")]
    ITATypeH,
    #[serde(rename = "ITA Type I")]
    ITATypeI,
    #[serde(rename = "ITA Type J")]
    ITATypeJ,
    #[serde(rename = "ITA Type K")]
    ITATypeK,
    #[serde(rename = "ITA Type L (CEI 23-50)")]
    ITATypeLCEI2350,
    #[serde(rename = "ITA Type M (BS 546)")]
    ITATypeMBS546,
    #[serde(rename = "ITA Type N")]
    ITATypeN,
    #[serde(rename = "ITA Type O")]
    ITATypeO,
    #[serde(rename = "USB Type A")]
    USBTypeA,
    #[serde(rename = "USB Type B")]
    USBTypeB,
    #[serde(rename = "USB Type C")]
    USBTypeC,
    #[serde(rename = "USB Mini A")]
    USBMiniA,
    #[serde(rename = "USB Mini B")]
    USBMiniB,
    #[serde(rename = "USB Micro A")]
    USBMicroA,
    #[serde(rename = "USB Micro B")]
    USBMicroB,
    #[serde(rename = "USB Micro AB")]
    USBMicroAB,
    #[serde(rename = "USB 3.0 Type B")]
    USB30TypeB,
    #[serde(rename = "USB 3.0 Micro B")]
    USB30MicroB,
    #[serde(rename = "DC Terminal")]
    DCTerminal,
    #[serde(rename = "Saf-D-Grid")]
    SafDGrid,
    #[serde(rename = "Hardwired")]
    Hardwired,
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "iec-60320-c6")]
    Iec60320C6,
    #[serde(rename = "iec-60320-c8")]
    Iec60320C8,
    #[serde(rename = "iec-60320-c14")]
    Iec60320C14,
    #[serde(rename = "iec-60320-c16")]
    Iec60320C16,
    #[serde(rename = "iec-60320-c20")]
    Iec60320C20,
    #[serde(rename = "iec-60320-c22")]
    Iec60320C22,
    #[serde(rename = "iec-60309-p-n-e-4h")]
    Iec60309PNE4h,
    #[serde(rename = "iec-60309-p-n-e-6h")]
    Iec60309PNE6h,
    #[serde(rename = "iec-60309-p-n-e-9h")]
    Iec60309PNE9h,
    #[serde(rename = "iec-60309-2p-e-4h")]
    Iec603092pE4h,
    #[serde(rename = "iec-60309-2p-e-6h")]
    Iec603092pE6h,
    #[serde(rename = "iec-60309-2p-e-9h")]
    Iec603092pE9h,
    #[serde(rename = "iec-60309-3p-e-4h")]
    Iec603093pE4h,
    #[serde(rename = "iec-60309-3p-e-6h")]
    Iec603093pE6h,
    #[serde(rename = "iec-60309-3p-e-9h")]
    Iec603093pE9h,
    #[serde(rename = "iec-60309-3p-n-e-4h")]
    Iec603093pNE4h,
    #[serde(rename = "iec-60309-3p-n-e-6h")]
    Iec603093pNE6h,
    #[serde(rename = "iec-60309-3p-n-e-9h")]
    Iec603093pNE9h,
    #[serde(rename = "nema-1-15p")]
    Nema115p,
    #[serde(rename = "nema-5-15p")]
    Nema515p,
    #[serde(rename = "nema-5-20p")]
    Nema520p,
    #[serde(rename = "nema-5-30p")]
    Nema530p,
    #[serde(rename = "nema-5-50p")]
    Nema550p,
    #[serde(rename = "nema-6-15p")]
    Nema615p,
    #[serde(rename = "nema-6-20p")]
    Nema620p,
    #[serde(rename = "nema-6-30p")]
    Nema630p,
    #[serde(rename = "nema-6-50p")]
    Nema650p,
    #[serde(rename = "nema-10-30p")]
    Nema1030p,
    #[serde(rename = "nema-10-50p")]
    Nema1050p,
    #[serde(rename = "nema-14-20p")]
    Nema1420p,
    #[serde(rename = "nema-14-30p")]
    Nema1430p,
    #[serde(rename = "nema-14-50p")]
    Nema1450p,
    #[serde(rename = "nema-14-60p")]
    Nema1460p,
    #[serde(rename = "nema-15-15p")]
    Nema1515p,
    #[serde(rename = "nema-15-20p")]
    Nema1520p,
    #[serde(rename = "nema-15-30p")]
    Nema1530p,
    #[serde(rename = "nema-15-50p")]
    Nema1550p,
    #[serde(rename = "nema-15-60p")]
    Nema1560p,
    #[serde(rename = "nema-l1-15p")]
    NemaL115p,
    #[serde(rename = "nema-l5-15p")]
    NemaL515p,
    #[serde(rename = "nema-l5-20p")]
    NemaL520p,
    #[serde(rename = "nema-l5-30p")]
    NemaL530p,
    #[serde(rename = "nema-l5-50p")]
    NemaL550p,
    #[serde(rename = "nema-l6-15p")]
    NemaL615p,
    #[serde(rename = "nema-l6-20p")]
    NemaL620p,
    #[serde(rename = "nema-l6-30p")]
    NemaL630p,
    #[serde(rename = "nema-l6-50p")]
    NemaL650p,
    #[serde(rename = "nema-l10-30p")]
    NemaL1030p,
    #[serde(rename = "nema-l14-20p")]
    NemaL1420p,
    #[serde(rename = "nema-l14-30p")]
    NemaL1430p,
    #[serde(rename = "nema-l14-50p")]
    NemaL1450p,
    #[serde(rename = "nema-l14-60p")]
    NemaL1460p,
    #[serde(rename = "nema-l15-20p")]
    NemaL1520p,
    #[serde(rename = "nema-l15-30p")]
    NemaL1530p,
    #[serde(rename = "nema-l15-50p")]
    NemaL1550p,
    #[serde(rename = "nema-l15-60p")]
    NemaL1560p,
    #[serde(rename = "nema-l21-20p")]
    NemaL2120p,
    #[serde(rename = "nema-l21-30p")]
    NemaL2130p,
    #[serde(rename = "cs6361c")]
    Cs6361c,
    #[serde(rename = "cs6365c")]
    Cs6365c,
    #[serde(rename = "cs8165c")]
    Cs8165c,
    #[serde(rename = "cs8265c")]
    Cs8265c,
    #[serde(rename = "cs8365c")]
    Cs8365c,
    #[serde(rename = "cs8465c")]
    Cs8465c,
    #[serde(rename = "ita-c")]
    ItaC,
    #[serde(rename = "ita-e")]
    ItaE,
    #[serde(rename = "ita-f")]
    ItaF,
    #[serde(rename = "ita-ef")]
    ItaEf,
    #[serde(rename = "ita-g")]
    ItaG,
    #[serde(rename = "ita-h")]
    ItaH,
    #[serde(rename = "ita-i")]
    ItaI,
    #[serde(rename = "ita-j")]
    ItaJ,
    #[serde(rename = "ita-k")]
    ItaK,
    #[serde(rename = "ita-l")]
    ItaL,
    #[serde(rename = "ita-m")]
    ItaM,
    #[serde(rename = "ita-n")]
    ItaN,
    #[serde(rename = "ita-o")]
    ItaO,
    #[serde(rename = "usb-a")]
    UsbA,
    #[serde(rename = "usb-b")]
    UsbB,
    #[serde(rename = "usb-c")]
    UsbC,
    #[serde(rename = "usb-mini-a")]
    UsbMiniA,
    #[serde(rename = "usb-mini-b")]
    UsbMiniB,
    #[serde(rename = "usb-micro-a")]
    UsbMicroA,
    #[serde(rename = "usb-micro-b")]
    UsbMicroB,
    #[serde(rename = "usb-micro-ab")]
    UsbMicroAb,
    #[serde(rename = "usb-3-b")]
    Usb3B,
    #[serde(rename = "usb-3-micro-b")]
    Usb3MicroB,
    #[serde(rename = "dc-terminal")]
    DcTerminal,
    #[serde(rename = "saf-d-grid")]
    SafDGrid,
    #[serde(rename = "hardwired")]
    Hardwired,
}
