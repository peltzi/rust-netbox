/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.7
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Tenant {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "slug")]
    pub slug: String,
    #[serde(rename = "group", skip_serializing_if = "Option::is_none")]
    pub group: Option<Box<crate::models::NestedTenantGroup>>,
    /// Long-form name (optional)
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "comments", skip_serializing_if = "Option::is_none")]
    pub comments: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<String>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    #[serde(rename = "circuit_count", skip_serializing_if = "Option::is_none")]
    pub circuit_count: Option<i32>,
    #[serde(rename = "device_count", skip_serializing_if = "Option::is_none")]
    pub device_count: Option<i32>,
    #[serde(rename = "ipaddress_count", skip_serializing_if = "Option::is_none")]
    pub ipaddress_count: Option<i32>,
    #[serde(rename = "prefix_count", skip_serializing_if = "Option::is_none")]
    pub prefix_count: Option<i32>,
    #[serde(rename = "rack_count", skip_serializing_if = "Option::is_none")]
    pub rack_count: Option<i32>,
    #[serde(rename = "site_count", skip_serializing_if = "Option::is_none")]
    pub site_count: Option<i32>,
    #[serde(
        rename = "virtualmachine_count",
        skip_serializing_if = "Option::is_none"
    )]
    pub virtualmachine_count: Option<i32>,
    #[serde(rename = "vlan_count", skip_serializing_if = "Option::is_none")]
    pub vlan_count: Option<i32>,
    #[serde(rename = "vrf_count", skip_serializing_if = "Option::is_none")]
    pub vrf_count: Option<i32>,
    #[serde(rename = "cluster_count", skip_serializing_if = "Option::is_none")]
    pub cluster_count: Option<i32>,
}

impl Tenant {
    pub fn new(name: String, slug: String) -> Tenant {
        Tenant {
            id: None,
            name,
            slug,
            group: None,
            description: None,
            comments: None,
            tags: None,
            custom_fields: None,
            created: None,
            last_updated: None,
            circuit_count: None,
            device_count: None,
            ipaddress_count: None,
            prefix_count: None,
            rack_count: None,
            site_count: None,
            virtualmachine_count: None,
            vlan_count: None,
            vrf_count: None,
            cluster_count: None,
        }
    }
}
