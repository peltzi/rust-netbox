/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.7
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WritableRackReservation {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "rack")]
    pub rack: i32,
    #[serde(rename = "units")]
    pub units: Vec<i32>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "user")]
    pub user: i32,
    #[serde(rename = "tenant", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<i32>,
    #[serde(rename = "description")]
    pub description: String,
}

impl WritableRackReservation {
    pub fn new(
        rack: i32,
        units: Vec<i32>,
        user: i32,
        description: String,
    ) -> WritableRackReservation {
        WritableRackReservation {
            id: None,
            rack,
            units,
            created: None,
            user,
            tenant: None,
            description,
        }
    }
}
