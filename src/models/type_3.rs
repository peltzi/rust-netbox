/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.7
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct Type3 {
    #[serde(rename = "label")]
    pub label: Label,
    #[serde(rename = "value")]
    pub value: Value,
}

impl Type3 {
    pub fn new(label: Label, value: Value) -> Type3 {
        Type3 { label, value }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Label {
    #[serde(rename = "C6")]
    C6,
    #[serde(rename = "C8")]
    C8,
    #[serde(rename = "C14")]
    C14,
    #[serde(rename = "C16")]
    C16,
    #[serde(rename = "C20")]
    C20,
    #[serde(rename = "P+N+E 4H")]
    PNE_4H,
    #[serde(rename = "P+N+E 6H")]
    PNE_6H,
    #[serde(rename = "P+N+E 9H")]
    PNE_9H,
    #[serde(rename = "2P+E 4H")]
    _2PE_4H,
    #[serde(rename = "2P+E 6H")]
    _2PE_6H,
    #[serde(rename = "2P+E 9H")]
    _2PE_9H,
    #[serde(rename = "3P+E 4H")]
    _3PE_4H,
    #[serde(rename = "3P+E 6H")]
    _3PE_6H,
    #[serde(rename = "3P+E 9H")]
    _3PE_9H,
    #[serde(rename = "3P+N+E 4H")]
    _3PNE_4H,
    #[serde(rename = "3P+N+E 6H")]
    _3PNE_6H,
    #[serde(rename = "3P+N+E 9H")]
    _3PNE_9H,
    #[serde(rename = "NEMA 5-15P")]
    NEMA_515P,
    #[serde(rename = "NEMA 5-20P")]
    NEMA_520P,
    #[serde(rename = "NEMA 5-30P")]
    NEMA_530P,
    #[serde(rename = "NEMA 5-50P")]
    NEMA_550P,
    #[serde(rename = "NEMA 6-15P")]
    NEMA_615P,
    #[serde(rename = "NEMA 6-20P")]
    NEMA_620P,
    #[serde(rename = "NEMA 6-30P")]
    NEMA_630P,
    #[serde(rename = "NEMA 6-50P")]
    NEMA_650P,
    #[serde(rename = "NEMA L5-15P")]
    NEMA_L515P,
    #[serde(rename = "NEMA L5-20P")]
    NEMA_L520P,
    #[serde(rename = "NEMA L5-30P")]
    NEMA_L530P,
    #[serde(rename = "NEMA L6-15P")]
    NEMA_L615P,
    #[serde(rename = "NEMA L6-20P")]
    NEMA_L620P,
    #[serde(rename = "NEMA L6-30P")]
    NEMA_L630P,
    #[serde(rename = "NEMA L6-50P")]
    NEMA_L650P,
    #[serde(rename = "CS6361C")]
    CS6361C,
    #[serde(rename = "CS6365C")]
    CS6365C,
    #[serde(rename = "CS8165C")]
    CS8165C,
    #[serde(rename = "CS8265C")]
    CS8265C,
    #[serde(rename = "CS8365C")]
    CS8365C,
    #[serde(rename = "CS8465C")]
    CS8465C,
    #[serde(rename = "ITA Type E (CEE 7/5)")]
    ITA_Type_E__CEE_75,
    #[serde(rename = "ITA Type F (CEE 7/4)")]
    ITA_Type_F__CEE_74,
    #[serde(rename = "ITA Type E/F (CEE 7/7)")]
    ITA_Type_EF__CEE_77,
    #[serde(rename = "ITA Type G (BS 1363)")]
    ITA_Type_G__BS_1363,
    #[serde(rename = "ITA Type H")]
    ITA_Type_H,
    #[serde(rename = "ITA Type I")]
    ITA_Type_I,
    #[serde(rename = "ITA Type J")]
    ITA_Type_J,
    #[serde(rename = "ITA Type K")]
    ITA_Type_K,
    #[serde(rename = "ITA Type L (CEI 23-50)")]
    ITA_Type_L__CEI_2350,
    #[serde(rename = "ITA Type M (BS 546)")]
    ITA_Type_M__BS_546,
    #[serde(rename = "ITA Type N")]
    ITA_Type_N,
    #[serde(rename = "ITA Type O")]
    ITA_Type_O,
}
///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Value {
    #[serde(rename = "iec-60320-c6")]
    Iec60320C6,
    #[serde(rename = "iec-60320-c8")]
    Iec60320C8,
    #[serde(rename = "iec-60320-c14")]
    Iec60320C14,
    #[serde(rename = "iec-60320-c16")]
    Iec60320C16,
    #[serde(rename = "iec-60320-c20")]
    Iec60320C20,
    #[serde(rename = "iec-60309-p-n-e-4h")]
    Iec60309PNE4h,
    #[serde(rename = "iec-60309-p-n-e-6h")]
    Iec60309PNE6h,
    #[serde(rename = "iec-60309-p-n-e-9h")]
    Iec60309PNE9h,
    #[serde(rename = "iec-60309-2p-e-4h")]
    Iec603092pE4h,
    #[serde(rename = "iec-60309-2p-e-6h")]
    Iec603092pE6h,
    #[serde(rename = "iec-60309-2p-e-9h")]
    Iec603092pE9h,
    #[serde(rename = "iec-60309-3p-e-4h")]
    Iec603093pE4h,
    #[serde(rename = "iec-60309-3p-e-6h")]
    Iec603093pE6h,
    #[serde(rename = "iec-60309-3p-e-9h")]
    Iec603093pE9h,
    #[serde(rename = "iec-60309-3p-n-e-4h")]
    Iec603093pNE4h,
    #[serde(rename = "iec-60309-3p-n-e-6h")]
    Iec603093pNE6h,
    #[serde(rename = "iec-60309-3p-n-e-9h")]
    Iec603093pNE9h,
    #[serde(rename = "nema-5-15p")]
    Nema515p,
    #[serde(rename = "nema-5-20p")]
    Nema520p,
    #[serde(rename = "nema-5-30p")]
    Nema530p,
    #[serde(rename = "nema-5-50p")]
    Nema550p,
    #[serde(rename = "nema-6-15p")]
    Nema615p,
    #[serde(rename = "nema-6-20p")]
    Nema620p,
    #[serde(rename = "nema-6-30p")]
    Nema630p,
    #[serde(rename = "nema-6-50p")]
    Nema650p,
    #[serde(rename = "nema-l5-15p")]
    NemaL515p,
    #[serde(rename = "nema-l5-20p")]
    NemaL520p,
    #[serde(rename = "nema-l5-30p")]
    NemaL530p,
    #[serde(rename = "nema-l5-50p")]
    NemaL550p,
    #[serde(rename = "nema-l6-20p")]
    NemaL620p,
    #[serde(rename = "nema-l6-30p")]
    NemaL630p,
    #[serde(rename = "nema-l6-50p")]
    NemaL650p,
    #[serde(rename = "cs6361c")]
    Cs6361c,
    #[serde(rename = "cs6365c")]
    Cs6365c,
    #[serde(rename = "cs8165c")]
    Cs8165c,
    #[serde(rename = "cs8265c")]
    Cs8265c,
    #[serde(rename = "cs8365c")]
    Cs8365c,
    #[serde(rename = "cs8465c")]
    Cs8465c,
    #[serde(rename = "ita-e")]
    ItaE,
    #[serde(rename = "ita-f")]
    ItaF,
    #[serde(rename = "ita-ef")]
    ItaEf,
    #[serde(rename = "ita-g")]
    ItaG,
    #[serde(rename = "ita-h")]
    ItaH,
    #[serde(rename = "ita-i")]
    ItaI,
    #[serde(rename = "ita-j")]
    ItaJ,
    #[serde(rename = "ita-k")]
    ItaK,
    #[serde(rename = "ita-l")]
    ItaL,
    #[serde(rename = "ita-m")]
    ItaM,
    #[serde(rename = "ita-n")]
    ItaN,
    #[serde(rename = "ita-o")]
    ItaO,
}
