/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.7
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct WritableCircuitTermination {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "circuit")]
    pub circuit: i32,
    #[serde(rename = "term_side")]
    pub term_side: TermSide,
    #[serde(rename = "site")]
    pub site: i32,
    #[serde(rename = "port_speed")]
    pub port_speed: i32,
    /// Upstream speed, if different from port speed
    #[serde(rename = "upstream_speed", skip_serializing_if = "Option::is_none")]
    pub upstream_speed: Option<i32>,
    #[serde(rename = "xconnect_id", skip_serializing_if = "Option::is_none")]
    pub xconnect_id: Option<String>,
    #[serde(rename = "pp_info", skip_serializing_if = "Option::is_none")]
    pub pp_info: Option<String>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "connected_endpoint_type", skip_serializing_if = "Option::is_none")]
    pub connected_endpoint_type: Option<String>,
    ///          Return the appropriate serializer for the type of connected object.         
    #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "connection_status", skip_serializing_if = "Option::is_none")]
    pub connection_status: Option<bool>,
    #[serde(rename = "cable", skip_serializing_if = "Option::is_none")]
    pub cable: Option<crate::models::NestedCable>,
}

impl WritableCircuitTermination {
    pub fn new(circuit: i32, term_side: TermSide, site: i32, port_speed: i32) -> WritableCircuitTermination {
        WritableCircuitTermination {
            id: None,
            circuit,
            term_side,
            site,
            port_speed,
            upstream_speed: None,
            xconnect_id: None,
            pp_info: None,
            description: None,
            connected_endpoint_type: None,
            connected_endpoint: None,
            connection_status: None,
            cable: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum TermSide {
    #[serde(rename = "A")]
    A,
    #[serde(rename = "Z")]
    Z,
}

