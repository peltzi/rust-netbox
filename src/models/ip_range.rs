/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct IpRange {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    #[serde(rename = "display", skip_serializing_if = "Option::is_none")]
    pub display: Option<String>,
    #[serde(rename = "family", skip_serializing_if = "Option::is_none")]
    pub family: Option<Box<crate::models::Family>>,
    /// IPv4 or IPv6 address (with mask)
    #[serde(rename = "start_address")]
    pub start_address: String,
    /// IPv4 or IPv6 address (with mask)
    #[serde(rename = "end_address")]
    pub end_address: String,
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<i32>,
    #[serde(rename = "vrf", skip_serializing_if = "Option::is_none")]
    pub vrf: Option<Box<crate::models::NestedVrf>>,
    #[serde(rename = "tenant", skip_serializing_if = "Option::is_none")]
    pub tenant: Option<Box<crate::models::NestedTenant>>,
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Box<crate::models::Status8>>,
    #[serde(rename = "role", skip_serializing_if = "Option::is_none")]
    pub role: Option<Box<crate::models::NestedRole>>,
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
    pub tags: Option<Vec<crate::models::NestedTag>>,
    #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
    pub custom_fields: Option<serde_json::Value>,
    #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
    pub created: Option<String>,
    #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
    pub last_updated: Option<String>,
    #[serde(rename = "children", skip_serializing_if = "Option::is_none")]
    pub children: Option<i32>,
}

impl IpRange {
    pub fn new(start_address: String, end_address: String) -> IpRange {
        IpRange {
            id: None,
            url: None,
            display: None,
            family: None,
            start_address,
            end_address,
            size: None,
            vrf: None,
            tenant: None,
            status: None,
            role: None,
            description: None,
            tags: None,
            custom_fields: None,
            created: None,
            last_updated: None,
            children: None,
        }
    }
}
