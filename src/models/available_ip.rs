/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 3.0
 *
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct AvailableIp {
    #[serde(rename = "family", skip_serializing_if = "Option::is_none")]
    pub family: Option<i32>,
    #[serde(rename = "address", skip_serializing_if = "Option::is_none")]
    pub address: Option<String>,
    #[serde(rename = "vrf", skip_serializing_if = "Option::is_none")]
    pub vrf: Option<Box<crate::models::NestedVrf>>,
}

impl AvailableIp {
    pub fn new() -> AvailableIp {
        AvailableIp {
            family: None,
            address: None,
            vrf: None,
        }
    }
}
