/*
 * NetBox API
 *
 * API to access NetBox
 *
 * The version of the OpenAPI document: 2.7
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ObjectChange {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<i32>,
    #[serde(rename = "time", skip_serializing_if = "Option::is_none")]
    pub time: Option<String>,
    #[serde(rename = "user", skip_serializing_if = "Option::is_none")]
    pub user: Option<crate::models::NestedUser>,
    #[serde(rename = "user_name", skip_serializing_if = "Option::is_none")]
    pub user_name: Option<String>,
    #[serde(rename = "request_id", skip_serializing_if = "Option::is_none")]
    pub request_id: Option<String>,
    #[serde(rename = "action", skip_serializing_if = "Option::is_none")]
    pub action: Option<crate::models::Status>,
    #[serde(rename = "changed_object_type", skip_serializing_if = "Option::is_none")]
    pub changed_object_type: Option<String>,
    #[serde(rename = "changed_object_id")]
    pub changed_object_id: i32,
    ///          Serialize a nested representation of the changed object.         
    #[serde(rename = "changed_object", skip_serializing_if = "Option::is_none")]
    pub changed_object: Option<::std::collections::HashMap<String, String>>,
    #[serde(rename = "object_data", skip_serializing_if = "Option::is_none")]
    pub object_data: Option<String>,
}

impl ObjectChange {
    pub fn new(changed_object_id: i32) -> ObjectChange {
        ObjectChange {
            id: None,
            time: None,
            user: None,
            user_name: None,
            request_id: None,
            action: None,
            changed_object_type: None,
            changed_object_id,
            changed_object: None,
            object_data: None,
        }
    }
}


