diff -ur src/models/cable.rs ../../src/models/cable.rs
--- src/models/cable.rs	2021-11-30 12:38:25.664975465 +0200
+++ ../../src/models/cable.rs	2021-11-30 14:56:24.177390605 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct Cable {
@@ -21,13 +22,13 @@
     #[serde(rename = "termination_a_id")]
     pub termination_a_id: i32,
     #[serde(rename = "termination_a", skip_serializing_if = "Option::is_none")]
-    pub termination_a: Option<::std::collections::HashMap<String, String>>,
+    pub termination_a: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "termination_b_type")]
     pub termination_b_type: String,
     #[serde(rename = "termination_b_id")]
     pub termination_b_id: i32,
     #[serde(rename = "termination_b", skip_serializing_if = "Option::is_none")]
-    pub termination_b: Option<::std::collections::HashMap<String, String>>,
+    pub termination_b: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
     pub _type: Option<Type>,
     #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
diff -ur src/models/circuit_termination.rs ../../src/models/circuit_termination.rs
--- src/models/circuit_termination.rs	2021-11-30 12:38:25.668308822 +0200
+++ ../../src/models/circuit_termination.rs	2021-11-30 14:55:38.397065559 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct CircuitTermination {
@@ -42,7 +43,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "_occupied", skip_serializing_if = "Option::is_none")]
diff -ur src/models/console_port.rs ../../src/models/console_port.rs
--- src/models/console_port.rs	2021-11-30 12:38:25.671642181 +0200
+++ ../../src/models/console_port.rs	2021-11-30 14:56:31.974112630 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct ConsolePort {
@@ -36,12 +37,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/console_server_port.rs ../../src/models/console_server_port.rs
--- src/models/console_server_port.rs	2021-11-30 12:38:25.671642181 +0200
+++ ../../src/models/console_server_port.rs	2021-11-30 14:56:37.897488021 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct ConsoleServerPort {
@@ -36,12 +37,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/device_napalm.rs ../../src/models/device_napalm.rs
--- src/models/device_napalm.rs	2021-11-30 12:38:25.674975539 +0200
+++ ../../src/models/device_napalm.rs	2021-11-30 14:56:42.584187965 +0200
@@ -7,15 +7,16 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct DeviceNapalm {
     #[serde(rename = "method")]
-    pub method: ::std::collections::HashMap<String, String>,
+    pub method: ::std::collections::HashMap<String, Value>,
 }
 
 impl DeviceNapalm {
-    pub fn new(method: ::std::collections::HashMap<String, String>) -> DeviceNapalm {
+    pub fn new(method: ::std::collections::HashMap<String, Value>) -> DeviceNapalm {
         DeviceNapalm { method }
     }
 }
diff -ur src/models/device_with_config_context.rs ../../src/models/device_with_config_context.rs
--- src/models/device_with_config_context.rs	2021-11-30 12:38:25.791643082 +0200
+++ ../../src/models/device_with_config_context.rs	2021-11-30 14:55:38.437065844 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct DeviceWithConfigContext {
@@ -69,7 +70,7 @@
     #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
     pub custom_fields: Option<serde_json::Value>,
     #[serde(rename = "config_context", skip_serializing_if = "Option::is_none")]
-    pub config_context: Option<::std::collections::HashMap<String, String>>,
+    pub config_context: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
diff -ur src/models/front_port.rs ../../src/models/front_port.rs
--- src/models/front_port.rs	2021-11-30 12:38:25.678308898 +0200
+++ ../../src/models/front_port.rs	2021-11-30 14:55:38.443732557 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct FrontPort {
@@ -40,7 +41,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
diff -ur src/models/image_attachment.rs ../../src/models/image_attachment.rs
--- src/models/image_attachment.rs	2021-11-30 12:38:25.681642256 +0200
+++ ../../src/models/image_attachment.rs	2021-11-30 14:55:38.447065915 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct ImageAttachment {
@@ -21,7 +22,7 @@
     #[serde(rename = "object_id")]
     pub object_id: i32,
     #[serde(rename = "parent", skip_serializing_if = "Option::is_none")]
-    pub parent: Option<::std::collections::HashMap<String, String>>,
+    pub parent: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
     pub name: Option<String>,
     #[serde(rename = "image", skip_serializing_if = "Option::is_none")]
diff -ur src/models/interface.rs ../../src/models/interface.rs
--- src/models/interface.rs	2021-11-30 12:38:25.698309048 +0200
+++ ../../src/models/interface.rs	2021-11-30 14:56:55.464279417 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct Interface {
@@ -53,12 +54,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/ip_address.rs ../../src/models/ip_address.rs
--- src/models/ip_address.rs	2021-11-30 12:38:25.698309048 +0200
+++ ../../src/models/ip_address.rs	2021-11-30 14:55:38.463732699 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct IpAddress {
@@ -37,7 +38,7 @@
     #[serde(rename = "assigned_object_id", skip_serializing_if = "Option::is_none")]
     pub assigned_object_id: Option<i32>,
     #[serde(rename = "assigned_object", skip_serializing_if = "Option::is_none")]
-    pub assigned_object: Option<::std::collections::HashMap<String, String>>,
+    pub assigned_object: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "nat_inside", skip_serializing_if = "Option::is_none")]
     pub nat_inside: Option<Box<crate::models::NestedIpAddress>>,
     #[serde(rename = "nat_outside", skip_serializing_if = "Option::is_none")]
diff -ur src/models/journal_entry.rs ../../src/models/journal_entry.rs
--- src/models/journal_entry.rs	2021-11-30 12:38:25.701642407 +0200
+++ ../../src/models/journal_entry.rs	2021-11-30 14:55:38.467066057 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct JournalEntry {
@@ -21,7 +22,7 @@
     #[serde(rename = "assigned_object_id")]
     pub assigned_object_id: i32,
     #[serde(rename = "assigned_object", skip_serializing_if = "Option::is_none")]
-    pub assigned_object: Option<::std::collections::HashMap<String, String>>,
+    pub assigned_object: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
diff -ur src/models/object_change.rs ../../src/models/object_change.rs
--- src/models/object_change.rs	2021-11-30 12:38:25.714975840 +0200
+++ ../../src/models/object_change.rs	2021-11-30 14:55:38.473732770 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct ObjectChange {
@@ -35,7 +36,7 @@
     pub changed_object_id: i32,
     ///  Serialize a nested representation of the changed object.
     #[serde(rename = "changed_object", skip_serializing_if = "Option::is_none")]
-    pub changed_object: Option<::std::collections::HashMap<String, String>>,
+    pub changed_object: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "prechange_data", skip_serializing_if = "Option::is_none")]
     pub prechange_data: Option<String>,
     #[serde(rename = "postchange_data", skip_serializing_if = "Option::is_none")]
diff -ur src/models/power_feed.rs ../../src/models/power_feed.rs
--- src/models/power_feed.rs	2021-11-30 12:38:25.718309198 +0200
+++ ../../src/models/power_feed.rs	2021-11-30 14:57:05.737685696 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct PowerFeed {
@@ -46,12 +47,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/power_outlet.rs ../../src/models/power_outlet.rs
--- src/models/power_outlet.rs	2021-11-30 12:38:25.718309198 +0200
+++ ../../src/models/power_outlet.rs	2021-11-30 14:57:12.171064710 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct PowerOutlet {
@@ -38,12 +39,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/power_port.rs ../../src/models/power_port.rs
--- src/models/power_port.rs	2021-11-30 12:38:25.721642557 +0200
+++ ../../src/models/power_port.rs	2021-11-30 14:57:16.481095313 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct PowerPort {
@@ -40,12 +41,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/rear_port.rs ../../src/models/rear_port.rs
--- src/models/rear_port.rs	2021-11-30 12:38:25.724975915 +0200
+++ ../../src/models/rear_port.rs	2021-11-30 14:55:38.513733054 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct RearPort {
@@ -38,7 +39,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
diff -ur src/models/virtual_machine_with_config_context.rs ../../src/models/virtual_machine_with_config_context.rs
--- src/models/virtual_machine_with_config_context.rs	2021-11-30 12:38:25.794976441 +0200
+++ ../../src/models/virtual_machine_with_config_context.rs	2021-11-30 14:55:38.517066412 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct VirtualMachineWithConfigContext {
@@ -51,7 +52,7 @@
     #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
     pub custom_fields: Option<serde_json::Value>,
     #[serde(rename = "config_context", skip_serializing_if = "Option::is_none")]
-    pub config_context: Option<::std::collections::HashMap<String, String>>,
+    pub config_context: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_cable.rs ../../src/models/writable_cable.rs
--- src/models/writable_cable.rs	2021-11-30 12:38:25.748309423 +0200
+++ ../../src/models/writable_cable.rs	2021-11-30 14:57:25.657827138 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableCable {
@@ -21,13 +22,13 @@
     #[serde(rename = "termination_a_id")]
     pub termination_a_id: i32,
     #[serde(rename = "termination_a", skip_serializing_if = "Option::is_none")]
-    pub termination_a: Option<::std::collections::HashMap<String, String>>,
+    pub termination_a: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "termination_b_type")]
     pub termination_b_type: String,
     #[serde(rename = "termination_b_id")]
     pub termination_b_id: i32,
     #[serde(rename = "termination_b", skip_serializing_if = "Option::is_none")]
-    pub termination_b: Option<::std::collections::HashMap<String, String>>,
+    pub termination_b: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "type", skip_serializing_if = "Option::is_none")]
     pub _type: Option<Type>,
     #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_circuit_termination.rs ../../src/models/writable_circuit_termination.rs
--- src/models/writable_circuit_termination.rs	2021-11-30 12:38:25.748309423 +0200
+++ ../../src/models/writable_circuit_termination.rs	2021-11-30 14:55:38.533733196 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableCircuitTermination {
@@ -42,7 +43,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "_occupied", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_console_port.rs ../../src/models/writable_console_port.rs
--- src/models/writable_console_port.rs	2021-11-30 12:38:25.751642782 +0200
+++ ../../src/models/writable_console_port.rs	2021-11-30 14:57:30.907864417 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableConsolePort {
@@ -38,12 +39,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_console_server_port.rs ../../src/models/writable_console_server_port.rs
--- src/models/writable_console_server_port.rs	2021-11-30 12:38:25.751642782 +0200
+++ ../../src/models/writable_console_server_port.rs	2021-11-30 14:57:34.967893245 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableConsoleServerPort {
@@ -38,12 +39,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_device_with_config_context.rs ../../src/models/writable_device_with_config_context.rs
--- src/models/writable_device_with_config_context.rs	2021-11-30 12:38:25.754976140 +0200
+++ ../../src/models/writable_device_with_config_context.rs	2021-11-30 14:55:38.563733409 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableDeviceWithConfigContext {
@@ -69,7 +70,7 @@
     #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
     pub custom_fields: Option<serde_json::Value>,
     #[serde(rename = "config_context", skip_serializing_if = "Option::is_none")]
-    pub config_context: Option<::std::collections::HashMap<String, String>>,
+    pub config_context: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_front_port.rs ../../src/models/writable_front_port.rs
--- src/models/writable_front_port.rs	2021-11-30 12:38:25.758309499 +0200
+++ ../../src/models/writable_front_port.rs	2021-11-30 14:55:38.570400124 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableFrontPort {
@@ -40,7 +41,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_interface.rs ../../src/models/writable_interface.rs
--- src/models/writable_interface.rs	2021-11-30 12:38:25.758309499 +0200
+++ ../../src/models/writable_interface.rs	2021-11-30 14:57:43.267952180 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableInterface {
@@ -53,12 +54,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_ip_address.rs ../../src/models/writable_ip_address.rs
--- src/models/writable_ip_address.rs	2021-11-30 12:38:25.761642857 +0200
+++ ../../src/models/writable_ip_address.rs	2021-11-30 14:55:38.587066909 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableIpAddress {
@@ -39,7 +40,7 @@
     #[serde(rename = "assigned_object_id", skip_serializing_if = "Option::is_none")]
     pub assigned_object_id: Option<i32>,
     #[serde(rename = "assigned_object", skip_serializing_if = "Option::is_none")]
-    pub assigned_object: Option<::std::collections::HashMap<String, String>>,
+    pub assigned_object: Option<::std::collections::HashMap<String, Value>>,
     /// The IP for which this address is the \"outside\" IP
     #[serde(rename = "nat_inside", skip_serializing_if = "Option::is_none")]
     pub nat_inside: Option<i32>,
diff -ur src/models/writable_journal_entry.rs ../../src/models/writable_journal_entry.rs
--- src/models/writable_journal_entry.rs	2021-11-30 12:38:25.761642857 +0200
+++ ../../src/models/writable_journal_entry.rs	2021-11-30 14:55:38.593733623 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableJournalEntry {
@@ -21,7 +22,7 @@
     #[serde(rename = "assigned_object_id")]
     pub assigned_object_id: i32,
     #[serde(rename = "assigned_object", skip_serializing_if = "Option::is_none")]
-    pub assigned_object: Option<::std::collections::HashMap<String, String>>,
+    pub assigned_object: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "created_by", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_power_feed.rs ../../src/models/writable_power_feed.rs
--- src/models/writable_power_feed.rs	2021-11-30 12:38:25.764976216 +0200
+++ ../../src/models/writable_power_feed.rs	2021-11-30 14:57:50.961340141 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritablePowerFeed {
@@ -46,12 +47,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_power_outlet.rs ../../src/models/writable_power_outlet.rs
--- src/models/writable_power_outlet.rs	2021-11-30 12:38:25.764976216 +0200
+++ ../../src/models/writable_power_outlet.rs	2021-11-30 14:57:55.268037388 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritablePowerOutlet {
@@ -40,12 +41,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_power_port.rs ../../src/models/writable_power_port.rs
--- src/models/writable_power_port.rs	2021-11-30 12:38:25.768309574 +0200
+++ ../../src/models/writable_power_port.rs	2021-11-30 14:57:59.758069270 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritablePowerPort {
@@ -41,12 +42,12 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     ///  Return the appropriate serializer for the type of connected object.
     #[serde(rename = "connected_endpoint", skip_serializing_if = "Option::is_none")]
-    pub connected_endpoint: Option<::std::collections::HashMap<String, String>>,
+    pub connected_endpoint: Option<::std::collections::HashMap<String, Value>>,
     #[serde(
         rename = "connected_endpoint_type",
         skip_serializing_if = "Option::is_none"
diff -ur src/models/writable_rear_port.rs ../../src/models/writable_rear_port.rs
--- src/models/writable_rear_port.rs	2021-11-30 12:38:25.774976291 +0200
+++ ../../src/models/writable_rear_port.rs	2021-11-30 14:55:38.630400549 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableRearPort {
@@ -38,7 +39,7 @@
     pub cable: Option<Box<crate::models::NestedCable>>,
     ///  Return the appropriate serializer for the cable termination model.
     #[serde(rename = "cable_peer", skip_serializing_if = "Option::is_none")]
-    pub cable_peer: Option<::std::collections::HashMap<String, String>>,
+    pub cable_peer: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "cable_peer_type", skip_serializing_if = "Option::is_none")]
     pub cable_peer_type: Option<String>,
     #[serde(rename = "tags", skip_serializing_if = "Option::is_none")]
diff -ur src/models/writable_virtual_machine_with_config_context.rs ../../src/models/writable_virtual_machine_with_config_context.rs
--- src/models/writable_virtual_machine_with_config_context.rs	2021-11-30 12:38:25.781643007 +0200
+++ ../../src/models/writable_virtual_machine_with_config_context.rs	2021-11-30 14:55:38.637067264 +0200
@@ -7,6 +7,7 @@
  *
  * Generated by: https://openapi-generator.tech
  */
+use serde_json::Value;
 
 #[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
 pub struct WritableVirtualMachineWithConfigContext {
@@ -51,7 +52,7 @@
     #[serde(rename = "custom_fields", skip_serializing_if = "Option::is_none")]
     pub custom_fields: Option<serde_json::Value>,
     #[serde(rename = "config_context", skip_serializing_if = "Option::is_none")]
-    pub config_context: Option<::std::collections::HashMap<String, String>>,
+    pub config_context: Option<::std::collections::HashMap<String, Value>>,
     #[serde(rename = "created", skip_serializing_if = "Option::is_none")]
     pub created: Option<String>,
     #[serde(rename = "last_updated", skip_serializing_if = "Option::is_none")]
